
@testset "dodecahedron_EdgeContraction" begin
    println("dodecahedron_EdgeContraction")
    F = Polytope([[15,10,9,14,1],[2,6,12,11,5],[5,11,7,3,19],[11,12,8,16,7],[12,6,20,4,8],[6,2,13,18,20],[2,5,19,17,13],[4,20,18,10,15],[18,13,17,9,10],[17,19,3,14,9],[3,7,16,1,14],[16,8,4,15,1]], Matrix([-1.376381920471174 0 0.2628655560595668; 1.376381920471174 0 -0.2628655560595668; -0.4253254041760200 -1.309016994374947 0.2628655560595668; -0.4253254041760200 1.309016994374947 0.2628655560595668; 1.113516364411607 -0.8090169943749474 0.2628655560595668; 1.113516364411607 0.8090169943749474 0.2628655560595668; -0.2628655560595668 -0.8090169943749474 1.113516364411607; -0.2628655560595668 0.8090169943749474 1.113516364411607; -0.6881909602355868 -0.5000000000000000 -1.113516364411607; -0.6881909602355868 0.5000000000000000 -1.113516364411607; 0.6881909602355868 -0.5000000000000000 1.113516364411607; 0.6881909602355868 0.5000000000000000 1.113516364411607; 0.8506508083520399 0 -1.113516364411607; -1.113516364411607 -0.8090169943749474 -0.2628655560595668; -1.113516364411607 0.8090169943749474 -0.2628655560595668; -0.8506508083520399 0 1.113516364411607; 0.2628655560595668 -0.8090169943749474 -1.113516364411607; 0.2628655560595668 0.8090169943749474 -1.113516364411607; 0.4253254041760200 -1.309016994374947 -0.2628655560595668; 0.4253254041760200 1.309016994374947 -0.2628655560595668]'))
    plot(F)
    if is_no_ci
        Defs = Vector{DeformationPath}([])
        for i in 1:6
            _D = DeformationPath_EdgeContraction(F, [9, 10], 0.75)
            _F = Polytope(F.facets, _D.motion_matrices[end])
            animate(_D,_F, "../animations/animate_Dodec_Edge_Projection"; scaling_factor=0.98, fixed_vertices=(9,10,18), filetype="mp4", special_edge=[9, 10], azimuth = π/10 + 2pi * 125 / 190, elevation=π/10, renderEntirePolytope=true, padding=0.01)
            plot(_F; special_edge=[9, 10], renderEntirePolytope=true, padding=0.01, azimuth = π/10 + 2pi * 125 / 190, elevation=π/10)
            push!(Defs,_D)
            project_deformation_random(Defs, F, 2, "../animations/Dodec_projection")
        end
        #println([norm((Defo[1].motion_samples[1][1:60]-Defo[1].motion_samples[2][1:60]) - (Defo[2].motion_samples[2][1:60]-Defo[2].motion_samples[1][1:60])) for Defo in collect(Iterators.product(Defs,Defs))])
        mini, index = findmin(Defo->norm((Defo[1].motion_samples[1][1:60]-Defo[1].motion_samples[2][1:60]) - (Defo[2].motion_samples[2][1:60]-Defo[2].motion_samples[1][1:60])), collect(Iterators.product(Defs,Defs)))
        #println("$mini, $index, $(collect(Iterators.product(1:6,1:6))), $(collect(Iterators.product(1:6,1:6))[index])")
        DPaths = collect(Iterators.product(Defs,Defs))
        _D = stich_deformation_paths(DPaths[index][1], DPaths[index][2])
        animate(_D,F, "../animations/dodecahedron_EdgeContraction"; fixed_vertices=(9,10,18), scaling_factor=0.98, recompute_deformation_samples=false, elevation=π/10, azimuth = π/3, filetype="mp4", special_edge=[9, 10], renderEntirePolytope=true, padding=0.01)
        for i in 7:9
            _D = DeformationPath_EdgeContraction(F, [9, 10], 1.25)
            animate(_D,F; fixed_vertices=(9,10,18), filetype="mp4", special_edge=[9, 10], renderEntirePolytope=true, padding=0.01)
            _F = Polytope(F.facets, _D.motion_matrices[end])
            plot(_F; azimuth = π/10 + 2pi * 125 / 190, special_edge=[9, 10], renderEntirePolytope=true, padding=0.01)
            push!(Defs,_D)
            project_deformation_random(Defs, F, 2, "../animations/Dodec_projection")
        end
    end
end

@testset "greatRhombiIcosidodecahedron" begin
    println("greatRhombiIcosidodecahedron")
    F = Polytope([[2,6,8,4,44,56,68,66,54,42],[109,29,17,19,31,111,103,107,105,101],[24,30,18,6,2,12],[7,3,15,27,31,19],[58,57,33,37,73,69,70,74,38,34],[84,116,120,88,87,119,115,83,91,92],[90,89,81,113,117,85,86,118,114,82],[36,40,76,72,71,75,39,35,59,60],[5,17,29,23,11,1],[4,8,20,32,28,16],[67,55,43,3,7,5,1,41,53,65],[18,30,110,102,106,108,104,112,32,20],[79,83,115,103,111,97],[38,74,62,48,42,54],[4,16,50,44],[23,29,109,95],[96,110,30,24],[43,49,15,3],[53,41,47,61,73,37],[98,112,104,116,84,80],[69,45,9,10,46,70],[26,100,92,91,99,25],[82,114,102,110,96,78],[55,39,75,63,49,43],[1,11,47,41],[28,32,112,98],[61,47,11,23,95,77,93,21,9,45],[50,16,28,98,80,100,26,14,52,64],[97,111,31,27],[42,48,12,2],[44,50,64,76,40,56],[77,95,109,101,113,81],[63,51,13,25,99,79,97,27,15,49],[46,10,22,94,78,96,24,12,48,62],[52,14,13,51,71,72],[22,21,93,89,90,94],[115,119,107,103],[34,38,54,66],[71,51,63,75],[94,90,82,78],[114,118,106,102],[35,39,55,67],[70,46,62,74],[99,91,83,79],[65,53,37,33],[104,108,120,116],[77,81,89,93],[76,64,52,72],[59,35,67,65,33,57],[106,118,86,88,120,108],[68,56,40,36],[101,105,117,113],[80,84,92,100],[73,61,45,69],[34,66,68,36,60,58],[105,107,119,87,85,117],[7,19,17,5],[6,18,20,8],[14,26,25,13],[9,21,22,10],[58,60,59,57],[85,87,88,86]], Matrix([-1.000000000000000 -1.309016994374947 -3.427050983124842; -1.000000000000000 -1.309016994374947 3.427050983124842; -1.000000000000000 1.309016994374947 -3.427050983124842; -1.000000000000000 1.309016994374947 3.427050983124842; -0.5000000000000000 -0.5000000000000000 -3.736067977499790; -0.5000000000000000 -0.5000000000000000 3.736067977499790; -0.5000000000000000 0.5000000000000000 -3.736067977499790; -0.5000000000000000 0.5000000000000000 3.736067977499790; -0.5000000000000000 -3.736067977499790 -0.5000000000000000; -0.5000000000000000 -3.736067977499790 0.5000000000000000; -0.5000000000000000 -2.118033988749895 -3.118033988749895; -0.5000000000000000 -2.118033988749895 3.118033988749895; -0.5000000000000000 3.736067977499790 -0.5000000000000000; -0.5000000000000000 3.736067977499790 0.5000000000000000; -0.5000000000000000 2.118033988749895 -3.118033988749895; -0.5000000000000000 2.118033988749895 3.118033988749895; 0.5000000000000000 -0.5000000000000000 -3.736067977499790; 0.5000000000000000 -0.5000000000000000 3.736067977499790; 0.5000000000000000 0.5000000000000000 -3.736067977499790; 0.5000000000000000 0.5000000000000000 3.736067977499790; 0.5000000000000000 -3.736067977499790 -0.5000000000000000; 0.5000000000000000 -3.736067977499790 0.5000000000000000; 0.5000000000000000 -2.118033988749895 -3.118033988749895; 0.5000000000000000 -2.118033988749895 3.118033988749895; 0.5000000000000000 3.736067977499790 -0.5000000000000000; 0.5000000000000000 3.736067977499790 0.5000000000000000; 0.5000000000000000 2.118033988749895 -3.118033988749895; 0.5000000000000000 2.118033988749895 3.118033988749895; 1.000000000000000 -1.309016994374947 -3.427050983124842; 1.000000000000000 -1.309016994374947 3.427050983124842; 1.000000000000000 1.309016994374947 -3.427050983124842; 1.000000000000000 1.309016994374947 3.427050983124842; -3.427050983124842 -1.000000000000000 -1.309016994374947; -3.427050983124842 -1.000000000000000 1.309016994374947; -3.427050983124842 1.000000000000000 -1.309016994374947; -3.427050983124842 1.000000000000000 1.309016994374947; -2.927050983124842 -1.809016994374947 -1.618033988749895; -2.927050983124842 -1.809016994374947 1.618033988749895; -2.927050983124842 1.809016994374947 -1.618033988749895; -2.927050983124842 1.809016994374947 1.618033988749895; -1.809016994374947 -1.618033988749895 -2.927050983124842; -1.809016994374947 -1.618033988749895 2.927050983124842; -1.809016994374947 1.618033988749895 -2.927050983124842; -1.809016994374947 1.618033988749895 2.927050983124842; -1.309016994374947 -3.427050983124842 -1.000000000000000; -1.309016994374947 -3.427050983124842 1.000000000000000; -1.309016994374947 -2.427050983124842 -2.618033988749895; -1.309016994374947 -2.427050983124842 2.618033988749895; -1.309016994374947 2.427050983124842 -2.618033988749895; -1.309016994374947 2.427050983124842 2.618033988749895; -1.309016994374947 3.427050983124842 -1.000000000000000; -1.309016994374947 3.427050983124842 1.000000000000000; -2.618033988749895 -1.309016994374947 -2.427050983124842; -2.618033988749895 -1.309016994374947 2.427050983124842; -2.618033988749895 1.309016994374947 -2.427050983124842; -2.618033988749895 1.309016994374947 2.427050983124842; -3.736067977499790 -0.5000000000000000 -0.5000000000000000; -3.736067977499790 -0.5000000000000000 0.5000000000000000; -3.736067977499790 0.5000000000000000 -0.5000000000000000; -3.736067977499790 0.5000000000000000 0.5000000000000000; -1.618033988749895 -2.927050983124842 -1.809016994374947; -1.618033988749895 -2.927050983124842 1.809016994374947; -1.618033988749895 2.927050983124842 -1.809016994374947; -1.618033988749895 2.927050983124842 1.809016994374947; -3.118033988749895 -0.5000000000000000 -2.118033988749895; -3.118033988749895 -0.5000000000000000 2.118033988749895; -3.118033988749895 0.5000000000000000 -2.118033988749895; -3.118033988749895 0.5000000000000000 2.118033988749895; -2.118033988749895 -3.118033988749895 -0.5000000000000000; -2.118033988749895 -3.118033988749895 0.5000000000000000; -2.118033988749895 3.118033988749895 -0.5000000000000000; -2.118033988749895 3.118033988749895 0.5000000000000000; -2.427050983124842 -2.618033988749895 -1.309016994374947; -2.427050983124842 -2.618033988749895 1.309016994374947; -2.427050983124842 2.618033988749895 -1.309016994374947; -2.427050983124842 2.618033988749895 1.309016994374947; 1.618033988749895 -2.927050983124842 -1.809016994374947; 1.618033988749895 -2.927050983124842 1.809016994374947; 1.618033988749895 2.927050983124842 -1.809016994374947; 1.618033988749895 2.927050983124842 1.809016994374947; 2.427050983124842 -2.618033988749895 -1.309016994374947; 2.427050983124842 -2.618033988749895 1.309016994374947; 2.427050983124842 2.618033988749895 -1.309016994374947; 2.427050983124842 2.618033988749895 1.309016994374947; 3.736067977499790 -0.5000000000000000 -0.5000000000000000; 3.736067977499790 -0.5000000000000000 0.5000000000000000; 3.736067977499790 0.5000000000000000 -0.5000000000000000; 3.736067977499790 0.5000000000000000 0.5000000000000000; 2.118033988749895 -3.118033988749895 -0.5000000000000000; 2.118033988749895 -3.118033988749895 0.5000000000000000; 2.118033988749895 3.118033988749895 -0.5000000000000000; 2.118033988749895 3.118033988749895 0.5000000000000000; 1.309016994374947 -3.427050983124842 -1.000000000000000; 1.309016994374947 -3.427050983124842 1.000000000000000; 1.309016994374947 -2.427050983124842 -2.618033988749895; 1.309016994374947 -2.427050983124842 2.618033988749895; 1.309016994374947 2.427050983124842 -2.618033988749895; 1.309016994374947 2.427050983124842 2.618033988749895; 1.309016994374947 3.427050983124842 -1.000000000000000; 1.309016994374947 3.427050983124842 1.000000000000000; 2.618033988749895 -1.309016994374947 -2.427050983124842; 2.618033988749895 -1.309016994374947 2.427050983124842; 2.618033988749895 1.309016994374947 -2.427050983124842; 2.618033988749895 1.309016994374947 2.427050983124842; 3.118033988749895 -0.5000000000000000 -2.118033988749895; 3.118033988749895 -0.5000000000000000 2.118033988749895; 3.118033988749895 0.5000000000000000 -2.118033988749895; 3.118033988749895 0.5000000000000000 2.118033988749895; 1.809016994374947 -1.618033988749895 -2.927050983124842; 1.809016994374947 -1.618033988749895 2.927050983124842; 1.809016994374947 1.618033988749895 -2.927050983124842; 1.809016994374947 1.618033988749895 2.927050983124842; 2.927050983124842 -1.809016994374947 -1.618033988749895; 2.927050983124842 -1.809016994374947 1.618033988749895; 2.927050983124842 1.809016994374947 -1.618033988749895; 2.927050983124842 1.809016994374947 1.618033988749895; 3.427050983124842 -1.000000000000000 -1.309016994374947; 3.427050983124842 -1.000000000000000 1.309016994374947; 3.427050983124842 1.000000000000000 -1.309016994374947; 3.427050983124842 1.000000000000000 1.309016994374947]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.15*pi, elevation=0.075*pi)
    @test !is_inf_rigid(F)
    if is_no_ci
        @test !is_rigid(F) # Zonotope
        D = DeformationPath(F, [], 350; step_size=0.008, tol=1e-6)
        animate(D,F,"../animations/greatRhombiIcosidodecahedron_motion"; fixed_vertices=(2,6,8), filetype="mp4", renderEntirePolytope=true, azimuth=0.15*pi, elevation=0.075*pi, animate_rotation=false,  rotation_frames=800, padding=0.1)
    end
end

@testset "truncatedDodecahedron" begin
    println("truncatedDodecahedron")
    F = Polytope([[3,42,46,44,40,1,34,48,50,36],[47,43,4,37,51,49,35,2,41,45],[2,35,19,24,21,16,5,59,55,14],[49,51,20,25,29,31,30,28,24,19],[37,4,15,56,60,6,17,22,25,20],[43,47,52,9,33,27,11,13,56,15],[45,41,14,55,12,10,26,32,9,52],[6,60,13,11,54,58,42,3,8,39],[27,33,32,26,53,57,44,46,58,54],[10,12,59,5,38,7,1,40,57,53],[16,21,28,30,18,23,48,34,7,38],[31,29,22,17,39,8,36,50,23,18],[9,32,33],[18,30,31],[47,45,52],[50,48,23],[10,53,26],[27,54,11],[21,24,28],[29,25,22],[40,44,57],[58,46,42],[35,49,19],[20,51,37],[12,55,59],[60,56,13],[41,2,14],[15,4,43],[34,1,7],[8,3,36],[38,5,16],[17,6,39]], Matrix([0 -1.618033988749895 2.489898284882780; 0 -1.618033988749895 -2.489898284882780; 0 1.618033988749895 2.489898284882780; 0 1.618033988749895 -2.489898284882780; 0.4253254041760200 -2.927050983124842 0.2628655560595668; 0.4253254041760200 2.927050983124842 0.2628655560595668; 0.6881909602355868 -2.118033988749895 1.964167172763647; 0.6881909602355868 2.118033988749895 1.964167172763647; -2.752763840942347 0 -1.113516364411607; -2.064572880706760 -2.118033988749895 0.2628655560595668; -2.064572880706760 2.118033988749895 0.2628655560595668; -1.376381920471174 -2.618033988749895 -0.2628655560595668; -1.376381920471174 2.618033988749895 -0.2628655560595668; -0.6881909602355868 -2.118033988749895 -1.964167172763647; -0.6881909602355868 2.118033988749895 -1.964167172763647; 1.376381920471174 -2.618033988749895 0.2628655560595668; 1.376381920471174 2.618033988749895 0.2628655560595668; 2.752763840942347 0 1.113516364411607; 1.801707324647194 -1.309016994374947 -1.964167172763647; 1.801707324647194 1.309016994374947 -1.964167172763647; 2.064572880706760 -2.118033988749895 -0.2628655560595668; 2.064572880706760 2.118033988749895 -0.2628655560595668; 2.227032728823213 0 1.964167172763647; 2.227032728823213 -1.618033988749895 -1.113516364411607; 2.227032728823213 1.618033988749895 -1.113516364411607; -2.652358132999233 -1.309016994374947 0.2628655560595668; -2.652358132999233 1.309016994374947 0.2628655560595668; 2.652358132999233 -1.309016994374947 -0.2628655560595668; 2.652358132999233 1.309016994374947 -0.2628655560595668; 2.915223689058800 -0.5000000000000000 0.2628655560595668; 2.915223689058800 0.5000000000000000 0.2628655560595668; -2.915223689058800 -0.5000000000000000 -0.2628655560595668; -2.915223689058800 0.5000000000000000 -0.2628655560595668; 0.9510565162951536 -1.309016994374947 2.489898284882780; 0.9510565162951536 -1.309016994374947 -2.489898284882780; 0.9510565162951536 1.309016994374947 2.489898284882780; 0.9510565162951536 1.309016994374947 -2.489898284882780; 0.8506508083520399 -2.618033988749895 1.113516364411607; 0.8506508083520399 2.618033988749895 1.113516364411607; -0.9510565162951536 -1.309016994374947 2.489898284882780; -0.9510565162951536 -1.309016994374947 -2.489898284882780; -0.9510565162951536 1.309016994374947 2.489898284882780; -0.9510565162951536 1.309016994374947 -2.489898284882780; -1.538841768587627 -0.5000000000000000 2.489898284882780; -1.538841768587627 -0.5000000000000000 -2.489898284882780; -1.538841768587627 0.5000000000000000 2.489898284882780; -1.538841768587627 0.5000000000000000 -2.489898284882780; 1.538841768587627 -0.5000000000000000 2.489898284882780; 1.538841768587627 -0.5000000000000000 -2.489898284882780; 1.538841768587627 0.5000000000000000 2.489898284882780; 1.538841768587627 0.5000000000000000 -2.489898284882780; -2.227032728823213 0 -1.964167172763647; -2.227032728823213 -1.618033988749895 1.113516364411607; -2.227032728823213 1.618033988749895 1.113516364411607; -0.8506508083520399 -2.618033988749895 -1.113516364411607; -0.8506508083520399 2.618033988749895 -1.113516364411607; -1.801707324647194 -1.309016994374947 1.964167172763647; -1.801707324647194 1.309016994374947 1.964167172763647; -0.4253254041760200 -2.927050983124842 -0.2628655560595668; -0.4253254041760200 2.927050983124842 -0.2628655560595668]'); pinned_vertices=[9,32,33])
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0., elevation=0.035*pi, alpha=0.65, plot_flexes=true)
    @test !is_inf_rigid(F)
    @test !is_second_order_rigid(F)
    @test !is_rigid(F)
    if is_no_ci
        D = DeformationPath(F, [], 500; step_size=0.005, tol=1e-6)
        animate(D,F,"../animations/truncatedDodecahedron_motion"; fixed_vertices=(9,32,33), filetype="mp4", elevation=0.075*pi, renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.025)
    end
end

@testset "RhombicDodecahedron" begin
    println("RhombicDodecahedron")
    F = Polytope([[2,1,3,4],[1,2,7,5],[6,8,3,1],[2,4,9,7],[8,10,4,3],[11,6,1,5],[9,4,10,14],[5,7,12,11],[11,13,8,6],[7,9,14,12],[13,14,10,8],[14,13,11,12]], Matrix([-0.8164965809277260 -0.8164965809277260 0; -0.8164965809277260 0 -0.5773502691896258; -0.8164965809277260 0 0.5773502691896258; -0.8164965809277260 0.8164965809277260 0; 0 -0.8164965809277260 -0.5773502691896258; 0 -0.8164965809277260 0.5773502691896258; 0 0 -1.154700538379252; 0 0 1.154700538379252; 0 0.8164965809277260 -0.5773502691896258; 0 0.8164965809277260 0.5773502691896258; 0.8164965809277260 -0.8164965809277260 0; 0.8164965809277260 0 -0.5773502691896258; 0.8164965809277260 0 0.5773502691896258; 0.8164965809277260 0.8164965809277260 0]'))
    plot(F; vertex_labels=false, vertex_size=16,  vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.025*pi)
    @test !is_inf_rigid(F)
    @test !is_rigid(F)
    if is_no_ci
        D = DeformationPath(F, [], 200; step_size=0.0085, tol=1e-6)
        animate(D,F,"../animations/RhombicDodecahedron_motion"; fixed_vertices=(2,1,3), filetype="mp4", renderEntirePolytope=true, azimuth=0.075*pi, animate_rotation=false, rotation_frames=600, padding=-0.75)
    end
end

@testset "cube" begin
    println("cube")
    F = Polytope([[1,2,3,4],[5,6,7,8],[1,2,5,6],[2,3,6,7],[3,4,7,8],[1,4,5,8]], Matrix([-1 -1 -1; 1 -1 -1; 1 1 -1; -1 1 -1; -1 -1 1; 1 -1 1; 1 1 1; -1 1 1]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, line_width=15)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # zonotope
    if is_no_ci
        D = DeformationPath(F, [1,1,1], 200; step_size=0.01)
        animate(D,F,"../animations/cube_motion"; fixed_vertices=(1,2,3), filetype="mp4", renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end

@testset "cuboctahedron" begin
    println("cuboctahedron")
    F = Polytope([[1,5,9],[1,5,3,7],[1,7,11],[1,9,2,11],[2,9,6],[2,11,8],[3,5,10],[3,7,12],[3,10,4,12],[4,10,6],[4,12,8],[6,4,8,2],[5,9,6,10],[7,11,8,12]], Matrix([1 1 0; -1 1 0; 1 -1 0; -1 -1 0; 1 0 1; -1 0 1; 1 0 -1; -1 0 -1; 0 1 1; 0 -1 1; 0 1 -1; 0 -1 -1;]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.125*pi, elevation=0.05*pi, alpha=0.65)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # "generic" Minkowski sum of two simplices
    if is_no_ci
        D = DeformationPath(F, [], 225; step_size=0.0075, tol=1e-6)
        animate(D,F,"../animations/cuboctahedron_motion"; fixed_vertices=(1,5,9), filetype="mp4", renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01, azimuth=0.125*pi, elevation=0.05*pi,)
    end
end


@testset "smallRhombiCuboctahedron" begin
    println("smallRhombiCuboctahedron")
    F = Polytope([(3,11,9,1),(2,10,12,4),(24,22,21,23),(19,17,18,20),(5,13,14,6),(8,16,15,7),(13,21,22,14),(16,24,23,15),(6,18,17,5),(7,19,20,8),(6,14,10,2),(4,12,16,8),(22,24,12,10),(2,4,20,18),(1,9,13,5),(7,15,11,3),(9,11,23,21),(17,19,3,1),(22,10,14),(16,12,24),(6,2,18),(20,4,8),(13,9,21),(23,11,15),(17,1,5),(7,3,19)], Matrix([-0.50000000000000 -0.50000000000000 -1.2071067811865; -0.50000000000000 -0.50000000000000 1.2071067811865; -0.50000000000000 0.50000000000000 -1.2071067811865; -0.50000000000000 0.50000000000000 1.2071067811865; -0.50000000000000 -1.2071067811865 -0.50000000000000; -0.50000000000000 -1.2071067811865 0.50000000000000; -0.50000000000000 1.2071067811865 -0.50000000000000; -0.50000000000000 1.2071067811865 0.50000000000000; 0.50000000000000 -0.50000000000000 -1.2071067811865; 0.50000000000000 -0.50000000000000 1.2071067811865; 0.50000000000000 0.50000000000000 -1.2071067811865; 0.50000000000000 0.50000000000000 1.2071067811865; 0.50000000000000 -1.2071067811865 -0.50000000000000; 0.50000000000000 -1.2071067811865 0.50000000000000; 0.50000000000000 1.2071067811865 -0.50000000000000; 0.50000000000000 1.2071067811865 0.50000000000000; -1.2071067811865 -0.50000000000000 -0.50000000000000; -1.2071067811865 -0.50000000000000 0.50000000000000; -1.2071067811865 0.50000000000000 -0.50000000000000; -1.2071067811865 0.50000000000000 0.50000000000000; 1.2071067811865 -0.50000000000000 -0.50000000000000; 1.2071067811865 -0.50000000000000 0.50000000000000; 1.2071067811865 0.50000000000000 -0.50000000000000; 1.2071067811865 0.50000000000000 0.50000000000000]'))    
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.075*pi, elevation=0.05*pi, alpha=0.65)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # "generic" Minkowski sum of cube and octahedron
    if is_no_ci
        D = DeformationPath(F, [], 225; step_size=0.0065, tol=1e-6, )
        animate(D,F,"../animations/smallRhombiCuboctahedron_motion"; fixed_vertices=(1,3,9), filetype="mp4", azimuth=0.075*pi, elevation=0.05*pi, renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800)
    end
end

@testset "truncatedOctahedron" begin
    println("truncatedOctahedron")
    F = Polytope([[17,11,9,15],[14,8,10,16],[22,24,21,18],[12,5,2,6],[13,19,23,20],[4,1,3,7],[19,13,7,3,8,14],[15,9,4,7,13,20],[16,10,5,12,18,21],[22,18,12,6,11,17],[20,23,24,22,17,15],[14,16,21,24,23,19],[9,11,6,2,1,4],[3,1,2,5,10,8]], Matrix([-1.5000000000000 -0.50000000000000 0; -1.5000000000000 0.50000000000000 0; -1.0000000000000 -1.0000000000000 -0.70710678118655; -1.0000000000000 -1.0000000000000 0.70710678118655; -1.0000000000000 1.0000000000000 -0.70710678118655; -1.0000000000000 1.0000000000000 0.70710678118655; -0.50000000000000 -1.5000000000000 0; -0.50000000000000 -0.50000000000000 -1.4142135623731; -0.50000000000000 -0.50000000000000 1.4142135623731; -0.50000000000000 0.50000000000000 -1.4142135623731; -0.50000000000000 0.50000000000000 1.4142135623731; -0.50000000000000 1.5000000000000 0; 0.50000000000000 -1.5000000000000 0; 0.50000000000000 -0.50000000000000 -1.4142135623731; 0.50000000000000 -0.50000000000000 1.4142135623731; 0.50000000000000 0.50000000000000 -1.4142135623731; 0.50000000000000 0.50000000000000 1.4142135623731; 0.50000000000000 1.5000000000000 0; 1.0000000000000 -1.0000000000000 -0.70710678118655; 1.0000000000000 -1.0000000000000 0.70710678118655; 1.0000000000000 1.0000000000000 -0.70710678118655; 1.000000000000 1.0000000000000 0.70710678118655; 1.5000000000000 -0.50000000000000 0; 1.5000000000000 0.50000000000000 0]'))    
    plot(F; vertex_labels=false, vertex_size=16, padding=0.01, vertex_color=:steelblue, elevation=pi/10, azimuth=0.)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # zonotope
    if is_no_ci
        D = DeformationPath(F, [], 225; step_size=0.0125, tol=1e-6)
        animate(D,F,"../animations/truncatedOctahedron_motion"; fixed_vertices=(9,11,17), filetype="mp4", elevation=pi/10, azimuth=0., renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end

@testset "greatRhombiCuboctahedron" begin
    println("greatRhombiCuboctahedron")
    F = Polytope([(44,42,17,19), (14,6,3,11), (34,36,27,25), (8,16,9,1), (20,18,41,43), (12,4,5,13), (26,28,35,33), (2,10,15,7), (45,23,24,46), (39,29,30,40), (48,22,21,47), (38,32,31,37), (9,19,17,11,3,25,27,1), (2,28,26,4,12,18,20,10), (41,48,47,42,44,45,46,43), (35,38,37,36,34,39,40,33), (15,24,23,16,8,31,32,7), (5,30,29,6,14,21,22,13), (46,24,15,10,20,43), (35,28,2,7,32,38), (41,18,12,13,22,48), (40,30,5,4,26,33), (44,19,9,16,23,45), (37,31,8,1,27,36), (47,21,14,11,17,42), (34,25,3,6,29,39)], Matrix([-0.50000000000000 1.2071067811865 -1.9142135623731; -0.50000000000000 1.2071067811865 1.9142135623731; -0.50000000000000 -1.2071067811865 -1.9142135623731; -0.50000000000000 -1.2071067811865 1.9142135623731; -0.50000000000000 -1.9142135623731 1.2071067811865; -0.50000000000000 -1.9142135623731 -1.2071067811865; -0.50000000000000 1.9142135623731 1.2071067811865; -0.50000000000000 1.9142135623731 -1.2071067811865; 0.50000000000000 1.2071067811865 -1.9142135623731; 0.50000000000000 1.2071067811865 1.9142135623731; 0.50000000000000 -1.2071067811865 -1.9142135623731; 0.50000000000000 -1.2071067811865 1.9142135623731; 0.50000000000000 -1.9142135623731 1.2071067811865; 0.50000000000000 -1.9142135623731 -1.2071067811865; 0.50000000000000 1.9142135623731 1.2071067811865; 0.50000000000000 1.9142135623731 -1.2071067811865; 1.2071067811865 -0.50000000000000 -1.9142135623731; 1.2071067811865 -0.50000000000000 1.9142135623731; 1.2071067811865 0.50000000000000 -1.9142135623731; 1.2071067811865 0.50000000000000 1.9142135623731; 1.2071067811865 -1.9142135623731 -0.50000000000000; 1.2071067811865 -1.9142135623731 0.50000000000000; 1.2071067811865 1.9142135623731 -0.50000000000000; 1.2071067811865 1.9142135623731 0.50000000000000; -1.2071067811865 -0.50000000000000 -1.9142135623731; -1.2071067811865 -0.50000000000000 1.9142135623731; -1.2071067811865 0.50000000000000 -1.9142135623731; -1.2071067811865 0.50000000000000 1.9142135623731; -1.2071067811865 -1.9142135623731 -0.50000000000000; -1.2071067811865 -1.9142135623731 0.50000000000000; -1.2071067811865 1.9142135623731 -0.50000000000000; -1.2071067811865 1.9142135623731 0.50000000000000; -1.9142135623731 -0.50000000000000 1.2071067811865; -1.9142135623731 -0.50000000000000 -1.2071067811865; -1.9142135623731 0.50000000000000 1.2071067811865; -1.9142135623731 0.50000000000000 -1.2071067811865; -1.9142135623731 1.2071067811865 -0.50000000000000; -1.9142135623731 1.2071067811865 0.50000000000000; -1.9142135623731 -1.2071067811865 -0.50000000000000; -1.9142135623731 -1.2071067811865 0.50000000000000; 1.9142135623731 -0.50000000000000 1.2071067811865; 1.9142135623731 -0.50000000000000 -1.2071067811865; 1.9142135623731 0.50000000000000 1.2071067811865; 1.9142135623731 0.50000000000000 -1.2071067811865; 1.9142135623731 1.2071067811865 -0.50000000000000; 1.9142135623731 1.2071067811865 0.50000000000000; 1.9142135623731 -1.2071067811865 -0.50000000000000; 1.9142135623731 -1.2071067811865 0.50000000000000]'))    
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, elevation=0.075*pi, alpha=0.65)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # Zontope
    if is_no_ci
        D = DeformationPath(F, [], 200; step_size=0.01, tol=1e-4)
        animate(D,F,"../animations/greatRhombiCuboctahedron_motion"; fixed_vertices=(3,6,14), filetype="mp4", elevation=0.075*pi, renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end


@testset "truncatedIcosahedron" begin
    println("truncatedIcosahedron")
    F = Polytope([[53,11,24,23,9],[51,39,40,52,30],[60,28,16,12,2],[20,42,48,55,18],[19,17,54,47,41],[1,10,15,27,59],[36,26,44,50,38],[4,58,22,32,8],[34,29,33,45,46],[21,57,3,6,31],[37,49,43,25,35],[13,5,56,7,14],[9,59,27,51,30,53],[53,30,52,28,60,11],[11,60,2,42,20,24],[24,20,18,17,19,23],[23,19,41,1,59,9],[13,25,43,3,57,5],[5,57,21,33,29,56],[56,29,34,22,58,7],[7,58,4,44,26,14],[14,26,36,35,25,13],[40,38,50,16,28,52],[16,50,44,4,8,12],[12,8,32,48,42,2],[48,32,22,34,46,55],[55,46,45,54,17,18],[54,45,33,21,31,47],[47,31,6,10,1,41],[10,6,3,43,49,15],[15,49,37,39,51,27],[39,37,35,36,38,40]], Matrix([-0.1624598481164532 -2.118033988749895 1.275976212528060; -0.1624598481164532 2.118033988749895 1.275976212528060; 0.1624598481164532 -2.118033988749895 -1.275976212528060; 0.1624598481164532 2.118033988749895 -1.275976212528060; -0.2628655560595668 -0.8090169943749474 -2.327438436766327; -0.2628655560595668 -2.427050983124842 -0.4253254041760200; -0.2628655560595668 0.8090169943749474 -2.327438436766327; -0.2628655560595668 2.427050983124842 -0.4253254041760200; 0.2628655560595668 -0.8090169943749474 2.327438436766327; 0.2628655560595668 -2.427050983124842 0.4253254041760200; 0.2628655560595668 0.8090169943749474 2.327438436766327; 0.2628655560595668 2.427050983124842 0.4253254041760200; 0.6881909602355868 -0.5000000000000000 -2.327438436766327; 0.6881909602355868 0.5000000000000000 -2.327438436766327; 1.213922072354720 -2.118033988749895 0.4253254041760200; 1.213922072354720 2.118033988749895 0.4253254041760200; -2.064572880706760 -0.5000000000000000 1.275976212528060; -2.064572880706760 0.5000000000000000 1.275976212528060; -1.376381920471174 -1.000000000000000 1.801707324647194; -1.376381920471174 1.000000000000000 1.801707324647194; -1.376381920471174 -1.618033988749895 -1.275976212528060; -1.376381920471174 1.618033988749895 -1.275976212528060; -0.6881909602355868 -0.5000000000000000 2.327438436766327; -0.6881909602355868 0.5000000000000000 2.327438436766327; 1.376381920471174 -1.000000000000000 -1.801707324647194; 1.376381920471174 1.000000000000000 -1.801707324647194; 1.376381920471174 -1.618033988749895 1.275976212528060; 1.376381920471174 1.618033988749895 1.275976212528060; -1.701301616704080 0 -1.801707324647194; 1.701301616704080 0 1.801707324647194; -1.213922072354720 -2.118033988749895 -0.4253254041760200; -1.213922072354720 2.118033988749895 -0.4253254041760200; -1.964167172763647 -0.8090169943749474 -1.275976212528060; -1.964167172763647 0.8090169943749474 -1.275976212528060; 2.064572880706760 -0.5000000000000000 -1.275976212528060; 2.064572880706760 0.5000000000000000 -1.275976212528060; 2.227032728823213 -1.000000000000000 -0.4253254041760200; 2.227032728823213 1.000000000000000 -0.4253254041760200; 2.389492576939667 -0.5000000000000000 0.4253254041760200; 2.389492576939667 0.5000000000000000 0.4253254041760200; -1.113516364411607 -1.809016994374947 1.275976212528060; -1.113516364411607 1.809016994374947 1.275976212528060; 1.113516364411607 -1.809016994374947 -1.275976212528060; 1.113516364411607 1.809016994374947 -1.275976212528060; -2.389492576939667 -0.5000000000000000 -0.4253254041760200; -2.389492576939667 0.5000000000000000 -0.4253254041760200; -1.639247476530740 -1.809016994374947 0.4253254041760200; -1.639247476530740 1.809016994374947 0.4253254041760200; 1.639247476530740 -1.809016994374947 -0.4253254041760200; 1.639247476530740 1.809016994374947 -0.4253254041760200; 1.964167172763647 -0.8090169943749474 1.275976212528060; 1.964167172763647 0.8090169943749474 1.275976212528060; 0.8506508083520399 0 2.327438436766327; -2.227032728823213 -1.000000000000000 0.4253254041760200; -2.227032728823213 1.000000000000000 0.4253254041760200; -0.8506508083520399 0 -2.327438436766327; -0.5257311121191336 -1.618033988749895 -1.801707324647194; -0.5257311121191336 1.618033988749895 -1.801707324647194; 0.5257311121191336 -1.618033988749895 1.801707324647194; 0.5257311121191336 1.618033988749895 1.801707324647194]'))
    plot(F; vertex_labels=false, vertex_size=16, padding=0.01, vertex_color=:steelblue, elevation=0.15*pi, azimuth=0., alpha=0.65)
    @test !is_inf_rigid(F)
    @test is_second_order_rigid(F)
    #@test is_rigid(F)    
end


@testset "DisdyakisTriacontahedron" begin
    println("DisdyakisTriacontahedron")
    F = Polytope([[15,23,5],[41,7,57],[6,23,18],[57,8,44],[5,23,1],[57,7,2],[1,23,6],[2,8,57],[14,25,3],[3,33,14],[25,15,5],[7,41,33],[58,53,4],[4,53,60],[6,18,58],[60,44,8],[34,5,1],[7,61,2],[1,6,34],[2,61,8],[25,22,3],[3,22,33],[5,28,25],[33,48,7],[55,58,4],[4,60,55],[58,31,6],[8,51,60],[28,5,34],[48,61,7],[34,6,31],[8,61,51],[13,16,24],[24,19,21],[32,26,13],[21,29,32],[16,11,24],[24,35,19],[32,36,26],[29,38,32],[15,11,23],[57,35,41],[36,18,23],[57,44,38],[17,25,14],[14,33,27],[11,15,25],[33,41,35],[18,36,58],[44,60,38],[42,53,58],[60,53,47],[23,11,16],[19,35,57],[26,36,23],[57,38,29],[9,13,24],[24,21,9],[32,13,9],[9,21,32],[11,25,17],[27,33,35],[42,58,36],[47,38,60],[23,16,13],[21,19,57],[13,26,23],[57,29,21],[17,14,24],[24,14,27],[32,53,42],[47,53,32],[24,11,17],[27,35,24],[42,36,32],[32,38,47],[25,37,20],[39,33,30],[40,58,45],[50,60,12],[20,37,59],[59,39,30],[62,40,45],[50,12,62],[59,54,10],[10,56,59],[10,54,62],[62,56,10],[59,22,20],[30,22,59],[45,55,62],[62,55,50],[20,22,25],[33,22,30],[37,25,28],[33,39,48],[40,31,58],[60,51,12],[45,58,55],[55,60,50],[43,37,34],[61,39,46],[34,40,49],[52,12,61],[54,43,34],[61,46,56],[34,49,54],[56,52,61],[37,28,34],[61,48,39],[31,40,34],[61,12,51],[59,37,43],[46,39,59],[49,40,62],[62,12,52],[59,43,54],[56,46,59],[54,49,62],[62,52,56]], Matrix([0 0 -2.727546913047446; 0 0 2.727546913047446; 0 -2.727546913047446 0; 0 2.727546913047446 0; 0 -0.9911632215903288 -2.594899002522325; 0 0.9911632215903288 -2.594899002522325; 0 -0.9911632215903288 2.594899002522325; 0 0.9911632215903288 2.594899002522325; -2.727546913047446 0 0; 2.727546913047446 0 0; -1.603735780931996 -1.603735780931996 -1.603735780931996; 1.603735780931996 1.603735780931996 1.603735780931996; -2.594899002522325 0 -0.9911632215903288; -0.9911632215903288 -2.594899002522325 0; -0.8428583490865879 -1.363773456523723 -2.206631805610311; -2.206631805610311 -0.8428583490865879 -1.363773456523723; -1.363773456523723 -2.206631805610311 -0.8428583490865879; -0.8428583490865879 1.363773456523723 -2.206631805610311; -2.206631805610311 -0.8428583490865879 1.363773456523723; 1.363773456523723 -2.206631805610311 -0.8428583490865879; -2.594899002522325 0 0.9911632215903288; 0.9911632215903288 -2.594899002522325 0; -1.556939401513395 0 -2.519180870072592; -2.519180870072592 -1.556939401513395 0; 0 -2.519180870072592 -1.556939401513395; -2.206631805610311 0.8428583490865879 -1.363773456523723; -1.363773456523723 -2.206631805610311 0.8428583490865879; 0.8428583490865879 -1.363773456523723 -2.206631805610311; -2.206631805610311 0.8428583490865879 1.363773456523723; 1.363773456523723 -2.206631805610311 0.8428583490865879; 0.8428583490865879 1.363773456523723 -2.206631805610311; -2.519180870072592 1.556939401513395 0; 0 -2.519180870072592 1.556939401513395; 1.556939401513395 0 -2.519180870072592; -1.603735780931996 -1.603735780931996 1.603735780931996; -1.603735780931996 1.603735780931996 -1.603735780931996; 1.603735780931996 -1.603735780931996 -1.603735780931996; -1.603735780931996 1.603735780931996 1.603735780931996; 1.603735780931996 -1.603735780931996 1.603735780931996; 1.603735780931996 1.603735780931996 -1.603735780931996; -0.8428583490865879 -1.363773456523723 2.206631805610311; -1.363773456523723 2.206631805610311 -0.8428583490865879; 2.206631805610311 -0.8428583490865879 -1.363773456523723; -0.8428583490865879 1.363773456523723 2.206631805610311; 1.363773456523723 2.206631805610311 -0.8428583490865879; 2.206631805610311 -0.8428583490865879 1.363773456523723; -1.363773456523723 2.206631805610311 0.8428583490865879; 0.8428583490865879 -1.363773456523723 2.206631805610311; 2.206631805610311 0.8428583490865879 -1.363773456523723; 1.363773456523723 2.206631805610311 0.8428583490865879; 0.8428583490865879 1.363773456523723 2.206631805610311; 2.206631805610311 0.8428583490865879 1.363773456523723; -0.9911632215903288 2.594899002522325 0; 2.594899002522325 0 -0.9911632215903288; 0.9911632215903288 2.594899002522325 0; 2.594899002522325 0 0.9911632215903288; -1.556939401513395 0 2.519180870072592; 0 2.519180870072592 -1.556939401513395; 2.519180870072592 -1.556939401513395 0; 0 2.519180870072592 1.556939401513395; 1.556939401513395 0 2.519180870072592; 2.519180870072592 1.556939401513395 0]'))
    plot(F; vertex_labels=false,  vertex_size=16,  vertex_color=:steelblue, padding=0.01, alpha=0.7, azimuth=0.1425*pi, elevation=0.0425*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "DisdyakisDodecahedron" begin
    println("DisdyakisDodecahedron")
    F = Polytope([[15,3,23],[26,1,13],[2,8,23],[26,16,4],[22,4,16],[8,2,22],[25,13,1],[3,15,25],[23,3,11],[7,1,26],[2,23,14],[12,26,4],[12,4,22],[22,2,14],[7,25,1],[3,25,11],[14,23,17],[5,26,12],[23,11,17],[5,7,26],[22,14,18],[18,12,22],[11,25,6],[6,25,7],[8,9,23],[26,19,16],[9,15,23],[26,13,19],[10,8,22],[22,16,10],[15,20,25],[25,20,13],[16,19,21],[21,9,8],[13,21,19],[9,21,15],[21,20,15],[13,20,21],[10,21,8],[16,21,10],[24,5,12],[14,17,24],[24,7,5],[17,11,24],[11,6,24],[24,6,7],[18,14,24],[24,12,18]], Matrix([0 1.131516719226857 1.131516719226857; 0 -1.131516719226857 -1.131516719226857; 0 1.131516719226857 -1.131516719226857; 0 -1.131516719226857 1.131516719226857; 1.131516719226857 0 1.131516719226857; 1.131516719226857 1.131516719226857 0; 0.9752868621749661 0.9752868621749661 0.9752868621749661; -0.9752868621749661 -0.9752868621749661 -0.9752868621749661; -1.131516719226857 0 -1.131516719226857; -1.131516719226857 -1.131516719226857 0; 0.9752868621749661 0.9752868621749661 -0.9752868621749661; 0.9752868621749661 -0.9752868621749661 0.9752868621749661; -0.9752868621749661 0.9752868621749661 0.9752868621749661; 0.9752868621749661 -0.9752868621749661 -0.9752868621749661; -0.9752868621749661 0.9752868621749661 -0.9752868621749661; -0.9752868621749661 -0.9752868621749661 0.9752868621749661; 1.131516719226857 0 -1.131516719226857; 1.131516719226857 -1.131516719226857 0; -1.131516719226857 0 1.131516719226857; -1.131516719226857 1.131516719226857 0; -1.845053354664443 0 0; 0 -1.845053354664443 0; 0 0 -1.845053354664443; 1.845053354664443 0 0; 0 1.845053354664443 0; 0 0 1.845053354664443]'))
    plot(F; vertex_labels=false,vertex_size=16,  vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.05*pi, elevation=0.05*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "RhombicTriacontahedron" begin
    println("RhombicTriacontahedron")
    F = Polytope([[16,15,11,12],[14,13,17,18],[10,28,20,30],[8,5,6,25],[12,28,31,16],[32,30,14,18],[6,3,11,15],[8,17,13,4],[11,21,19,27],[13,29,19,22],[7,16,23,26],[24,18,9,26],[12,11,27,28],[30,29,13,14],[7,6,15,16],[18,17,8,9],[2,22,19,21],[23,1,24,26],[3,2,21,11],[4,13,22,2],[16,31,1,23],[1,32,18,24],[31,28,10,1],[10,30,32,1],[6,5,2,3],[8,4,2,5],[28,27,19,20],[20,19,29,30],[26,25,6,7],[9,8,25,26]], Matrix([0 0 -1.618033988749895; 0 0 1.618033988749895; 0.2763932022500210 -0.8506508083520399 1.170820393249937; 0.2763932022500210 0.8506508083520399 1.170820393249937; 0.8944271909999159 0 1.170820393249937; 1.170820393249937 -0.8506508083520399 0.7236067977499790; 1.170820393249937 -0.8506508083520399 -0.2763932022500210; 1.170820393249937 0.8506508083520399 0.7236067977499790; 1.170820393249937 0.8506508083520399 -0.2763932022500210; -0.8944271909999159 0 -1.170820393249937; -0.4472135954999579 -1.376381920471174 0.7236067977499790; -0.4472135954999579 -1.376381920471174 -0.2763932022500210; -0.4472135954999579 1.376381920471174 0.7236067977499790; -0.4472135954999579 1.376381920471174 -0.2763932022500210; 0.4472135954999579 -1.376381920471174 0.2763932022500210; 0.4472135954999579 -1.376381920471174 -0.7236067977499790; 0.4472135954999579 1.376381920471174 0.2763932022500210; 0.4472135954999579 1.376381920471174 -0.7236067977499790; -1.447213595499958 0 0.7236067977499790; -1.447213595499958 0 -0.2763932022500210; -0.7236067977499790 -0.5257311121191336 1.170820393249937; -0.7236067977499790 0.5257311121191336 1.170820393249937; 0.7236067977499790 -0.5257311121191336 -1.170820393249937; 0.7236067977499790 0.5257311121191336 -1.170820393249937; 1.447213595499958 0 0.2763932022500210; 1.447213595499958 0 -0.7236067977499790; -1.170820393249937 -0.8506508083520399 0.2763932022500210; -1.170820393249937 -0.8506508083520399 -0.7236067977499790; -1.170820393249937 0.8506508083520399 0.2763932022500210; -1.170820393249937 0.8506508083520399 -0.7236067977499790; -0.2763932022500210 -0.8506508083520399 -1.170820393249937; -0.2763932022500210 0.8506508083520399 -1.170820393249937]'))
    plot(F; vertex_labels=false, vertex_size=16,  vertex_color=:steelblue, padding=0.01, alpha=0.7, azimuth=0.075*pi, elevation=0.15*pi)
    @test !is_inf_rigid(F)
    @test !is_rigid(F)
    if is_no_ci
        D = DeformationPath(F, [], 200; step_size=0.0075, tol=1e-6)
        animate(D,F,"../animations/RhombicTriacontahedron_motion"; fixed_vertices=(11,12,16), filetype="mp4", renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end


@testset "DeltoidalHexecontahedron" begin
    println("DeltoidalHexecontahedron")
    F = Polytope([[43,33,1,7],[8,2,34,44],[33,45,9,1],[2,10,46,34],[31,15,5,3],[3,6,14,31],[17,32,4,11],[12,4,32,16],[39,5,43,7],[40,8,44,6],[9,45,11,41],[12,46,10,42],[39,7,1,47],[48,2,8,40],[1,9,41,47],[48,42,10,2],[53,3,5,19],[18,6,3,53],[11,4,54,21],[20,54,4,12],[33,37,23,35],[24,38,34,36],[15,25,43,5],[6,44,26,14],[45,27,17,11],[12,16,28,46],[29,37,25,15],[14,26,38,29],[27,35,30,17],[16,30,36,28],[29,13,23,37],[38,24,13,29],[23,13,30,35],[36,30,13,24],[15,31,14,29],[25,37,33,43],[44,34,38,26],[33,35,27,45],[46,28,36,34],[17,30,16,32],[19,5,39,57],[58,40,6,18],[41,11,21,59],[60,20,12,42],[19,57,51,55],[55,52,58,18],[49,59,21,56],[56,20,60,50],[55,51,61,22],[22,62,52,55],[61,49,56,22],[22,56,50,62],[55,18,53,19],[57,39,47,51],[52,48,40,58],[47,41,59,49],[50,60,42,48],[54,20,56,21],[49,61,51,47],[50,48,52,62]], Matrix([0 0 -2.777751854490367; 0 0 2.777751854490367; 0 -2.777751854490367 0; 0 2.777751854490367 0; 0 -2.424082922456278 -1.498165637626155; 0 -2.424082922456278 1.498165637626155; 0 -0.9732489894677302 -2.547998933943006; 0 -0.9732489894677302 2.547998933943006; 0 0.9732489894677302 -2.547998933943006; 0 0.9732489894677302 2.547998933943006; 0 2.424082922456278 -1.498165637626155; 0 2.424082922456278 1.498165637626155; -2.777751854490367 0 0; -1.388875927245184 -2.247248456439233 0.8583725291940496; -1.388875927245184 -2.247248456439233 -0.8583725291940496; -1.388875927245184 2.247248456439233 0.8583725291940496; -1.388875927245184 2.247248456439233 -0.8583725291940496; 1.388875927245184 -2.247248456439233 0.8583725291940496; 1.388875927245184 -2.247248456439233 -0.8583725291940496; 1.388875927245184 2.247248456439233 0.8583725291940496; 1.388875927245184 2.247248456439233 -0.8583725291940496; 2.777751854490367 0 0; -2.547998933943006 0 -0.9732489894677302; -2.547998933943006 0 0.9732489894677302; -1.574749944475276 -1.574749944475276 -1.574749944475276; -1.574749944475276 -1.574749944475276 1.574749944475276; -1.574749944475276 1.574749944475276 -1.574749944475276; -1.574749944475276 1.574749944475276 1.574749944475276; -2.424082922456278 -1.498165637626155 0; -2.424082922456278 1.498165637626155 0; -0.9732489894677302 -2.547998933943006 0; -0.9732489894677302 2.547998933943006 0; -1.498165637626155 0 -2.424082922456278; -1.498165637626155 0 2.424082922456278; -2.247248456439233 0.8583725291940496 -1.388875927245184; -2.247248456439233 0.8583725291940496 1.388875927245184; -2.247248456439233 -0.8583725291940496 -1.388875927245184; -2.247248456439233 -0.8583725291940496 1.388875927245184; 0.8583725291940496 -1.388875927245184 -2.247248456439233; 0.8583725291940496 -1.388875927245184 2.247248456439233; 0.8583725291940496 1.388875927245184 -2.247248456439233; 0.8583725291940496 1.388875927245184 2.247248456439233; -0.8583725291940496 -1.388875927245184 -2.247248456439233; -0.8583725291940496 -1.388875927245184 2.247248456439233; -0.8583725291940496 1.388875927245184 -2.247248456439233; -0.8583725291940496 1.388875927245184 2.247248456439233; 1.498165637626155 0 -2.424082922456278; 1.498165637626155 0 2.424082922456278; 2.247248456439233 0.8583725291940496 -1.388875927245184; 2.247248456439233 0.8583725291940496 1.388875927245184; 2.247248456439233 -0.8583725291940496 -1.388875927245184; 2.247248456439233 -0.8583725291940496 1.388875927245184; 0.9732489894677302 -2.547998933943006 0; 0.9732489894677302 2.547998933943006 0; 2.424082922456278 -1.498165637626155 0; 2.424082922456278 1.498165637626155 0; 1.574749944475276 -1.574749944475276 -1.574749944475276; 1.574749944475276 -1.574749944475276 1.574749944475276; 1.574749944475276 1.574749944475276 -1.574749944475276; 1.574749944475276 1.574749944475276 1.574749944475276; 2.547998933943006 0 -0.9732489894677302; 2.547998933943006 0 0.9732489894677302]'))
    plot(F; vertex_labels=false,vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.025*pi, elevation=0.025*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "DeltoidalIcositetrahedron" begin
    println("DeltoidalIcositetrahedron")
    F = Polytope([[26,2,7,5],[6,8,3,25],[2,24,9,7],[8,10,23,3],[1,26,5,11],[11,6,25,1],[24,4,12,9],[10,12,4,23],[22,5,7,14],[15,8,6,21],[7,9,20,14],[15,19,10,8],[11,5,22,13],[13,21,6,11],[20,9,12,16],[16,12,10,19],[1,17,2,26],[25,3,17,1],[2,17,4,24],[23,4,17,3],[13,22,14,18],[18,15,21,13],[14,20,16,18],[18,16,19,15]], Matrix([-1.194477582584385 -1.194477582584385 0; -1.194477582584385 0 -1.194477582584385; -1.194477582584385 0 1.194477582584385; -1.194477582584385 1.194477582584385 0; 0 -1.194477582584385 -1.194477582584385; 0 -1.194477582584385 1.194477582584385; 0 0 -1.689246397241466; 0 0 1.689246397241466; 0 1.194477582584385 -1.194477582584385; 0 1.194477582584385 1.194477582584385; 0 -1.689246397241466 0; 0 1.689246397241466 0; 1.194477582584385 -1.194477582584385 0; 1.194477582584385 0 -1.194477582584385; 1.194477582584385 0 1.194477582584385; 1.194477582584385 1.194477582584385 0; -1.689246397241466 0 0; 1.689246397241466 0 0; 0.9238795325112868 0.9238795325112868 0.9238795325112868; 0.9238795325112868 0.9238795325112868 -0.9238795325112868; 0.9238795325112868 -0.9238795325112868 0.9238795325112868; 0.9238795325112868 -0.9238795325112868 -0.9238795325112868; -0.9238795325112868 0.9238795325112868 0.9238795325112868; -0.9238795325112868 0.9238795325112868 -0.9238795325112868; -0.9238795325112868 -0.9238795325112868 0.9238795325112868; -0.9238795325112868 -0.9238795325112868 -0.9238795325112868]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.075*pi, elevation=0.05*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "PentagonalIcositetrahedron" begin
    println("PentagonalIcositetrahedron")
    F = Polytope([[5,13,8,21,17],[22,20,6,13,7],[15,18,7,13,5],[8,13,6,16,19],[14,12,29,26,9],[11,30,27,10,14],[9,23,25,11,14],[14,10,24,28,12],[35,33,18,15,3],[34,19,16,4,36],[31,17,21,1,37],[38,32,20,22,2],[3,31,37,25,23],[28,24,4,32,38],[26,29,2,33,35],[1,34,36,27,30],[15,5,17,31,3],[4,16,6,20,32],[2,22,7,18,33],[21,8,19,34,1],[9,26,35,3,23],[27,36,4,24,10],[25,37,1,30,11],[12,28,38,2,29]], Matrix([0 0 -2.294001053686955; 0 0 2.294001053686955; 0 -2.294001053686955 0; 0 2.294001053686955 0; -1.724879418506459 -1.247223167993643 -0.3686763528801638; -1.724879418506459 1.247223167993643 0.3686763528801638; -1.724879418506459 -0.3686763528801638 1.247223167993643; -1.724879418506459 0.3686763528801638 -1.247223167993643; 1.724879418506459 -1.247223167993643 0.3686763528801638; 1.724879418506459 1.247223167993643 -0.3686763528801638; 1.724879418506459 -0.3686763528801638 -1.247223167993643; 1.724879418506459 0.3686763528801638 1.247223167993643; -2.294001053686955 0 0; 2.294001053686955 0 0; -1.247223167993643 -1.724879418506459 0.3686763528801638; -1.247223167993643 1.724879418506459 -0.3686763528801638; -1.247223167993643 -1.247223167993643 -1.247223167993643; -1.247223167993643 -1.247223167993643 1.247223167993643; -1.247223167993643 1.247223167993643 -1.247223167993643; -1.247223167993643 1.247223167993643 1.247223167993643; -1.247223167993643 -0.3686763528801638 -1.724879418506459; -1.247223167993643 0.3686763528801638 1.724879418506459; 1.247223167993643 -1.724879418506459 -0.3686763528801638; 1.247223167993643 1.724879418506459 0.3686763528801638; 1.247223167993643 -1.247223167993643 -1.247223167993643; 1.247223167993643 -1.247223167993643 1.247223167993643; 1.247223167993643 1.247223167993643 -1.247223167993643; 1.247223167993643 1.247223167993643 1.247223167993643; 1.247223167993643 -0.3686763528801638 1.724879418506459; 1.247223167993643 0.3686763528801638 -1.724879418506459; -0.3686763528801638 -1.724879418506459 -1.247223167993643; -0.3686763528801638 1.724879418506459 1.247223167993643; -0.3686763528801638 -1.247223167993643 1.724879418506459; -0.3686763528801638 1.247223167993643 -1.724879418506459; 0.3686763528801638 -1.724879418506459 1.247223167993643; 0.3686763528801638 1.724879418506459 -1.247223167993643; 0.3686763528801638 -1.247223167993643 -1.724879418506459; 0.3686763528801638 1.247223167993643 1.724879418506459]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.025*pi, elevation=0.025*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "TriakisIcosahedron" begin
    println("TriakisIcosahedron")
    F = Polytope([[1,26,2],[5,31,6],[3,27,1],[7,32,5],[19,26,31],[32,27,20],[26,23,2],[3,24,27],[30,29,13],[29,26,21],[22,27,30],[16,26,29],[30,27,17],[31,29,6],[7,30,32],[31,23,19],[20,24,32],[18,24,23],[8,28,31],[9,32,28],[14,23,31],[32,24,15],[23,24,4],[31,28,14],[28,32,15],[21,25,29],[30,25,22],[28,23,14],[15,24,28],[18,23,28],[28,24,18],[29,25,13],[13,25,30],[2,23,1],[8,31,5],[1,24,3],[5,32,9],[19,23,26],[27,24,20],[11,26,1],[6,29,5],[1,27,12],[5,30,7],[1,25,11],[5,29,10],[12,25,1],[10,30,5],[1,23,4],[5,28,8],[4,24,1],[9,28,5],[10,29,30],[21,26,25],[22,25,27],[16,29,31],[32,30,17],[25,26,11],[27,25,12],[31,26,16],[17,27,32]], Matrix([0 0 1.639247476530740; 0.2628655560595668 -0.8090169943749474 1.113516364411607; 0.2628655560595668 0.8090169943749474 1.113516364411607; 0.8506508083520399 0 1.113516364411607; 0 0 -1.639247476530740; -0.2628655560595668 -0.8090169943749474 -1.113516364411607; -0.2628655560595668 0.8090169943749474 -1.113516364411607; 0.6881909602355868 -0.5000000000000000 -1.113516364411607; 0.6881909602355868 0.5000000000000000 -1.113516364411607; -0.8506508083520399 0 -1.113516364411607; -0.6881909602355868 -0.5000000000000000 1.113516364411607; -0.6881909602355868 0.5000000000000000 1.113516364411607; -1.376381920471174 0 -0.2628655560595668; 1.113516364411607 -0.8090169943749474 -0.2628655560595668; 1.113516364411607 0.8090169943749474 -0.2628655560595668; -0.4253254041760200 -1.309016994374947 -0.2628655560595668; -0.4253254041760200 1.309016994374947 -0.2628655560595668; 1.376381920471174 0 0.2628655560595668; 0.4253254041760200 -1.309016994374947 0.2628655560595668; 0.4253254041760200 1.309016994374947 0.2628655560595668; -1.113516364411607 -0.8090169943749474 0.2628655560595668; -1.113516364411607 0.8090169943749474 0.2628655560595668; 1.186170617212143 -0.8618033988749895 0.7330937578935453; 1.186170617212143 0.8618033988749895 0.7330937578935453; -1.466187515787091 0 0.7330937578935453; -0.4530768593185975 -1.394427190999916 0.7330937578935453; -0.4530768593185975 1.394427190999916 0.7330937578935453; 1.466187515787091 0 -0.7330937578935453; -1.186170617212143 -0.8618033988749895 -0.7330937578935453; -1.186170617212143 0.8618033988749895 -0.7330937578935453; 0.4530768593185975 -1.394427190999916 -0.7330937578935453; 0.4530768593185975 1.394427190999916 -0.7330937578935453]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, elevation=0., azimuth=0.)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "PentakisDodecahedron" begin
    println("PentakisDodecahedron")
    F = Polytope([[7,9,19],[21,10,8],[31,14,24],[25,15,32],[6,14,17],[24,19,31],[6,16,15],[21,25,32],[9,12,3],[7,19,24],[3,11,10],[8,25,21],[13,14,6],[6,15,13],[7,24,18],[8,20,25],[4,1,22],[22,1,5],[9,1,4],[1,10,5],[26,17,31],[32,16,27],[3,1,9],[3,10,1],[28,14,13],[13,15,30],[18,12,7],[8,11,20],[16,17,29],[11,12,2],[19,26,31],[27,21,32],[29,17,26],[27,16,29],[28,13,23],[23,13,30],[23,18,28],[30,20,23],[2,18,23],[23,20,2],[19,9,4],[5,10,21],[24,14,28],[30,15,25],[26,22,29],[22,27,29],[4,26,19],[5,21,27],[18,24,28],[25,20,30],[2,12,18],[20,11,2],[3,12,11],[4,22,26],[5,27,22],[6,17,16],[17,14,31],[15,16,32],[7,12,9],[10,11,8]], Matrix([-0.9589573737630087 0 1.255291499136947; 1.376381920471174 0 0.6881909602355868; 0 0 1.538841768587627; -1.113516364411607 -0.8090169943749474 0.6881909602355868; -1.113516364411607 0.8090169943749474 0.6881909602355868; 0 0 -1.538841768587627; 0.4253254041760200 -1.309016994374947 0.6881909602355868; 0.4253254041760200 1.309016994374947 0.6881909602355868; -0.2963341253739380 -0.9120226591665966 1.255291499136947; -0.2963341253739380 0.9120226591665966 1.255291499136947; 0.7758128122554424 0.5636610018750175 1.255291499136947; 0.7758128122554424 -0.5636610018750175 1.255291499136947; 0.9589573737630087 0 -1.255291499136947; 0.2963341253739380 -0.9120226591665966 -1.255291499136947; 0.2963341253739380 0.9120226591665966 -1.255291499136947; -0.7758128122554424 0.5636610018750175 -1.255291499136947; -0.7758128122554424 -0.5636610018750175 -1.255291499136947; 1.255291499136947 -0.9120226591665966 0.2963341253739380; -0.4794786868815044 -1.475683661041614 0.2963341253739380; 1.255291499136947 0.9120226591665966 0.2963341253739380; -0.4794786868815044 1.475683661041614 0.2963341253739380; -1.551625624510885 0 0.2963341253739380; 1.551625624510885 0 -0.2963341253739380; 0.4794786868815044 -1.475683661041614 -0.2963341253739380; 0.4794786868815044 1.475683661041614 -0.2963341253739380; -1.255291499136947 -0.9120226591665966 -0.2963341253739380; -1.255291499136947 0.9120226591665966 -0.2963341253739380; 1.113516364411607 -0.8090169943749474 -0.6881909602355868; -1.376381920471174 0 -0.6881909602355868; 1.113516364411607 0.8090169943749474 -0.6881909602355868; -0.4253254041760200 -1.309016994374947 -0.6881909602355868; -0.4253254041760200 1.309016994374947 -0.6881909602355868]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, elevation=0.05*pi, azimuth=0.05*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "PentagonalHexecontahedron" begin
    println("PentagonalHexecontahedron")
    F = Polytope([[11,5,17,33,29],[6,18,35,30,12],[7,27,34,67,61],[28,36,68,62,8],[27,17,5,15,34],[6,16,36,28,18],[77,86,31,22,75],[24,76,78,88,32],[55,33,17,27,7],[18,28,8,56,35],[57,48,77,75,90],[92,58,50,78,76],[70,61,67,86,65],[68,88,66,72,62],[22,31,15,5,9],[10,24,32,16,6],[69,81,55,7,45],[56,8,46,71,82],[85,59,21,11,29],[30,87,60,23,12],[83,90,25,3,79],[4,80,84,92,26],[64,1,83,79,89],[91,63,2,84,80],[29,33,55,81,85],[35,56,82,87,30],[37,13,5,11,21],[12,23,38,14,6],[67,34,15,31,86],[16,32,88,68,36],[43,85,81,69,53],[82,71,54,44,87],[44,54,89,73,47],[49,43,53,91,74],[41,47,73,59,85],[87,42,49,74,60],[89,37,21,59,73],[60,74,91,38,23],[3,25,9,5,13],[14,4,26,10,6],[89,79,3,13,37],[38,91,80,4,14],[39,7,61,70,51],[8,62,72,52,40],[90,75,22,9,25],[26,92,76,24,10],[40,52,90,83,1],[84,2,39,51,92],[20,19,86,77,48],[78,50,19,20,88],[58,65,86,19,50],[88,20,48,57,66],[51,70,65,58,92],[72,66,57,90,52],[63,45,7,39,2],[8,40,1,64,46],[42,41,85,43,49],[87,44,47,41,42],[53,69,45,63,91],[71,46,64,89,54]], Matrix([0 0 -3.632203788863790; 0 0 3.632203788863790; -2.421469192575860 0 -2.707284860010576; 2.421469192575860 0 2.707284860010576; -3.740934376726981 0 -0.7144548911134016; 3.740934376726981 0 0.7144548911134016; -2.312024594500178 0 3.026479485613579; 2.312024594500178 0 -3.026479485613579; -2.973883635327380 1.249503788463027 -1.669628931824382; 2.973883635327380 1.249503788463027 1.669628931824382; -3.203330803095605 -1.646917940690374 -0.4682279641451526; 3.203330803095605 -1.646917940690374 0.4682279641451526; -2.891224897457488 -0.6430296059140726 -2.102435702245471; 2.891224897457488 -0.6430296059140726 2.102435702245471; -3.337075450436258 1.415265416255982 0.2320681009572418; 3.337075450436258 1.415265416255982 -0.2320681009572418; -3.478881598739421 -0.3748216581145623 0.9745747331000193; 3.478881598739421 -0.3748216581145623 -0.9745747331000193; -0.1753926269615850 3.597624822551189 0.4682279641451526; 0.1753926269615850 3.597624822551189 -0.4682279641451526; -2.707284860010576 -2.097053835252088 -1.210734596287930; -2.707284860010576 2.097053835252088 -1.210734596287930; 2.707284860010576 -2.097053835252088 1.210734596287930; 2.707284860010576 2.097053835252088 1.210734596287930; -2.464007691561295 0.9739506306439168 -2.484550387662035; 2.464007691561295 0.9739506306439168 2.484550387662035; -3.242721735551510 0.3748216581145623 1.592849281704495; 3.242721735551510 0.3748216581145623 -1.592849281704495; -3.027938176134020 -1.950706881860815 0.4682279641451526; 3.027938176134020 -1.950706881860815 -0.4682279641451526; -2.894193528793368 2.182359406295207 -0.2320681009572418; 2.894193528793368 2.182359406295207 0.2320681009572418; -3.169744324437183 -1.296050546424113 1.210734596287930; -3.169744324437183 1.296050546424113 1.210734596287930; 3.169744324437183 -1.296050546424113 -1.210734596287930; 3.169744324437183 1.296050546424113 -1.210734596287930; -2.546666429431186 -1.580424813192871 -2.051743617240947; 2.546666429431186 -1.580424813192871 2.051743617240947; -0.7533680014879535 0.6430296059140726 3.494546314486118; 0.7533680014879535 0.6430296059140726 -3.494546314486118; -0.4428819216428905 -3.597624822551189 -0.2320681009572418; 0.4428819216428905 -3.597624822551189 0.2320681009572418; -0.4048397947298108 -3.200210670323842 1.669628931824382; 0.4048397947298108 -3.200210670323842 -1.669628931824382; -1.103516034039151 -1.249503788463027 3.227057019804813; 1.103516034039151 -1.249503788463027 -3.227057019804813; -0.4624594644266070 -3.393104381676201 -1.210734596287930; -0.4624594644266070 3.393104381676201 -1.210734596287930; 0.4624594644266070 -3.393104381676201 1.210734596287930; 0.4624594644266070 3.393104381676201 1.210734596287930; -0.5303440059143036 1.580424813192871 3.227057019804813; 0.5303440059143036 1.580424813192871 -3.227057019804813; -0.3885378576111407 -2.620868571334291 2.484550387662035; 0.3885378576111407 -2.620868571334291 -2.484550387662035; -2.642021251711896 -1.415265416255982 2.051743617240947; 2.642021251711896 -1.415265416255982 -2.051743617240947; -0.09535482228070930 2.995690229448854 -2.051743617240947; 0.09535482228070930 2.995690229448854 2.051743617240947; -2.064045877185527 -2.825389012209279 -0.9745747331000193; 2.064045877185527 -2.825389012209279 0.9745747331000193; -2.075469833950154 1.646917940690374 2.484550387662035; 2.075469833950154 1.646917940690374 -2.484550387662035; -0.1801959733631064 -0.9739506306439168 3.494546314486118; 0.1801959733631064 -0.9739506306439168 -3.494546314486118; -0.8887324746216608 2.825389012209279 2.102435702245471; 0.8887324746216608 2.825389012209279 -2.102435702245471; -2.569043840597569 1.950706881860815 1.669628931824382; 2.569043840597569 1.950706881860815 -1.669628931824382; -1.210734596287930 -2.097053835252088 2.707284860010576; -1.210734596287930 2.097053835252088 2.707284860010576; 1.210734596287930 -2.097053835252088 -2.707284860010576; 1.210734596287930 2.097053835252088 -2.707284860010576; -1.296755789959939 -2.995690229448854 -1.592849281704495; 1.296755789959939 -2.995690229448854 1.592849281704495; -1.945965945591572 2.620868571334291 -1.592849281704495; 1.945965945591572 2.620868571334291 1.592849281704495; -1.414835721553894 3.200210670323842 -0.9745747331000193; 1.414835721553894 3.200210670323842 0.9745747331000193; -1.633860039953454 -0.3309210247298442 -3.227057019804813; 1.633860039953454 -0.3309210247298442 3.227057019804813; -2.002492422835827 -2.182359406295207 2.102435702245471; 2.002492422835827 -2.182359406295207 -2.102435702245471; -0.9335639748510599 0.3309210247298442 -3.494546314486118; 0.9335639748510599 0.3309210247298442 3.494546314486118; -1.870467188363491 -3.239744204136071 0.7144548911134016; -1.870467188363491 3.239744204136071 0.7144548911134016; 1.870467188363491 -3.239744204136071 -0.7144548911134016; 1.870467188363491 3.239744204136071 -0.7144548911134016; -1.156012297250089 -2.002272033011570 -3.026479485613579; -1.156012297250089 2.002272033011570 -3.026479485613579; 1.156012297250089 -2.002272033011570 3.026479485613579; 1.156012297250089 2.002272033011570 3.026479485613579]'))
    plot(F; vertex_labels=false,vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.05*pi, elevation=0.025*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "SmallTriakisOctahedron" begin
    println("SmallTriakisOctahedron")
    F = Polytope([[6,8,4],[3,8,5],[7,6,2],[1,5,7],[12,8,6],[5,8,11],[10,6,7],[7,5,9],[14,6,10],[9,5,14],[14,12,6],[5,11,14],[11,8,14],[14,8,12],[7,9,14],[14,10,7],[6,13,2],[1,13,5],[6,4,13],[13,3,5],[3,13,8],[8,13,4],[13,1,7],[7,2,13]], Matrix([-0.5000000000000000 -0.5000000000000000 -0.5000000000000000; -0.5000000000000000 -0.5000000000000000 0.5000000000000000; -0.5000000000000000 0.5000000000000000 -0.5000000000000000; -0.5000000000000000 0.5000000000000000 0.5000000000000000; 0 0 -1.207106781186548; 0 0 1.207106781186548; 0 -1.207106781186548 0; 0 1.207106781186548 0; 0.5000000000000000 -0.5000000000000000 -0.5000000000000000; 0.5000000000000000 -0.5000000000000000 0.5000000000000000; 0.5000000000000000 0.5000000000000000 -0.5000000000000000; 0.5000000000000000 0.5000000000000000 0.5000000000000000; -1.207106781186548 0 0; 1.207106781186548 0 0]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01,  alpha=0.65, azimuth=0.025*pi, elevation=0.025*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "TetrakisHexahedron" begin
    println("TetrakisHexahedron")
    F = Polytope([[3,2,1],[1,2,4],[3,1,5],[6,2,3],[1,4,9],[10,4,2],[5,6,3],[1,7,5],[6,8,2],[1,9,7],[8,10,2],[4,10,9],[11,6,5],[5,7,13],[14,8,6],[7,9,13],[14,10,8],[9,10,12],[11,5,13],[14,6,11],[9,12,13],[14,12,10],[13,14,11],[12,14,13]], Matrix([-0.9428090415820634 0 -0.6666666666666667; -0.9428090415820634 0 0.6666666666666667; -0.7071067811865475 -0.7071067811865475 0; -0.7071067811865475 0.7071067811865475 0; 0 -0.9428090415820634 -0.6666666666666667; 0 -0.9428090415820634 0.6666666666666667; 0 0 -1.000000000000000; 0 0 1.000000000000000; 0 0.9428090415820634 -0.6666666666666667; 0 0.9428090415820634 0.6666666666666667; 0.7071067811865475 -0.7071067811865475 0; 0.7071067811865475 0.7071067811865475 0; 0.9428090415820634 0 -0.6666666666666667; 0.9428090415820634 0 0.6666666666666667]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.65, azimuth=0.05*pi, elevation=0.075*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "TriakisTetrahedron" begin
    println("TriakisTetrahedron")
    F = Polytope([[6,4,1],[1,5,7],[6,3,4],[7,5,3],[6,2,3],[7,3,2],[7,2,6],[7,6,8],[4,3,1],[3,5,1],[6,1,8],[1,7,8]], Matrix([0 0 -1.020620726159658; 0 0 0.6123724356957945; -0.9622504486493763 0 0.3402069087198858; -0.2886751345948129 -0.5000000000000000 -0.2041241452319315; -0.2886751345948129 0.5000000000000000 -0.2041241452319315; 0.4811252243246881 -0.8333333333333333 0.3402069087198858; 0.4811252243246881 0.8333333333333333 0.3402069087198858; 0.5773502691896258 0 -0.2041241452319315]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01,alpha=0.65, azimuth=0.025*pi, elevation=0.025*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end

@testset "snubDodecahedron" begin
    println("snubDodecahedron")
    F = Polytope([[5,1,9],[5,9,3],[5,29,15],[5,3,29],[1,27,19],[1,19,25],[1,25,9],[15,29,7],[15,45,39],[15,7,45],[27,39,41],[27,41,37],[27,37,19],[9,25,17],[39,45,21],[39,21,41],[29,3,13],[3,43,13],[19,37,35],[25,31,17],[45,7,11],[7,49,11],[41,21,23],[37,33,35],[17,31,59],[17,59,55],[13,43,53],[13,53,51],[21,47,23],[43,55,48],[43,48,53],[35,33,58],[35,58,57],[31,57,34],[31,34,59],[11,49,52],[11,52,54],[55,59,24],[55,24,48],[49,51,50],[49,50,52],[23,47,56],[23,56,60],[51,53,12],[51,12,50],[33,60,32],[33,32,58],[57,58,36],[57,36,34],[47,54,44],[47,44,56],[48,24,22],[54,52,14],[54,14,44],[60,56,18],[60,18,32],[34,36,38],[24,42,22],[50,12,8],[12,46,8],[32,18,26],[36,20,38],[44,14,4],[22,42,40],[22,40,46],[14,30,4],[18,10,26],[38,20,28],[38,28,42],[42,28,40],[8,46,16],[8,16,30],[46,40,16],[26,10,2],[26,2,20],[20,2,28],[4,30,6],[4,6,10],[30,16,6],[10,6,2],[39,27,1,5,15],[3,9,17,55,43],[51,49,7,29,13],[57,31,25,19,35],[47,21,45,11,54],[33,37,41,23,60],[42,24,59,34,38],[46,12,53,48,22],[36,58,32,26,20],[14,52,50,8,30],[44,4,10,18,56],[16,40,28,2,6]], Matrix([-2.050215876504471 -0.6430296059140726 0.1753926269615850; 2.050215876504471 -0.6430296059140726 -0.1753926269615850; -1.645069107445494 0.6430296059140726 1.236080638790192; 1.645069107445494 0.6430296059140726 -1.236080638790192; -2.092754375489906 0.3309210247298442 0.3981270993101259; 2.092754375489906 0.3309210247298442 -0.3981270993101259; -1.332963201807377 1.646917940690374 -0.3981270993101259; 1.332963201807377 1.646917940690374 0.3981270993101259; -1.825265080808600 -0.3309210247298442 1.098423164412520; 1.825265080808600 -0.3309210247298442 -1.098423164412520; -0.6260465263418767 1.746186440985826 -1.098423164412520; 0.6260465263418767 1.746186440985826 1.098423164412520; -1.062215752565082 1.454024229338015 1.185388553785668; 1.062215752565082 1.454024229338015 -1.185388553785668; -1.932135944910516 0.8475500467890608 -0.4428819216428905; 1.932135944910516 0.8475500467890608 0.4428819216428905; -1.144874490434974 -0.8475500467890608 1.618195324206757; 1.144874490434974 -0.8475500467890608 -1.618195324206757; -1.581987912359319 -1.454024229338015 -0.1753926269615850; 1.581987912359319 -1.454024229338015 0.1753926269615850; -1.057412406163561 0.3748216581145623 -1.840929796555298; 1.057412406163561 0.3748216581145623 1.840929796555298; -0.4391378575590853 -0.3748216581145623 -2.077089659743209; 0.4391378575590853 -0.3748216581145623 2.077089659743209; -1.562410369575602 -1.249503788463027 0.8032738683691033; 1.562410369575602 -1.249503788463027 -0.8032738683691033; -1.863307207721680 -0.7283351769571915 -0.8032738683691033; 1.863307207721680 -0.7283351769571915 0.8032738683691033; -1.700067843953274 1.249503788463027 0.4428819216428905; 1.700067843953274 1.249503788463027 -0.4428819216428905; -0.7281140440422709 -1.646917940690374 1.185388553785668; 0.7281140440422709 -1.646917940690374 -1.185388553785668; -0.2656545796156639 -1.746186440985826 -1.236080638790192; 0.2656545796156639 -1.746186440985826 1.236080638790192; -0.7597911736825294 -1.977838965420219 -0.3981270993101259; 0.7597911736825294 -1.977838965420219 0.3981270993101259; -1.199218554466724 -1.415265416255982 -1.098423164412520; 1.199218554466724 -1.415265416255982 1.098423164412520; -1.790329796607353 0.1928937113523590 -1.185388553785668; 1.790329796607353 0.1928937113523590 1.185388553785668; -1.306437116715503 -0.5677153694669213 -1.618195324206757; 1.306437116715503 -0.5677153694669213 1.618195324206757; -0.8533112808975971 0.7283351769571915 1.840929796555298; 0.8533112808975971 0.7283351769571915 -1.840929796555298; -1.379414527829830 1.103156835071754 -1.236080638790192; 1.379414527829830 1.103156835071754 1.236080638790192; -0.1050361490362740 0.5677153694669213 -2.077089659743209; 0.1050361490362740 0.5677153694669213 2.077089659743209; -0.4682279641451526 2.097053835252088 -0.1753926269615850; 0.4682279641451526 2.097053835252088 0.1753926269615850; -0.3008968381460777 1.977838965420219 0.8032738683691033; 0.3008968381460777 1.977838965420219 -0.8032738683691033; -0.1615626262805293 1.415265416255982 1.618195324206757; 0.1615626262805293 1.415265416255982 -1.618195324206757; -0.5441740065953593 -0.1928937113523590 2.077089659743209; 0.5441740065953593 -0.1928937113523590 -2.077089659743209; -0.2320681009572418 -2.097053835252088 0.4428819216428905; 0.2320681009572418 -2.097053835252088 -0.4428819216428905; -0.2041011252659638 -1.103156835071754 1.840929796555298; 0.2041011252659638 -1.103156835071754 -1.840929796555298]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, alpha=0.7, azimuth=0., elevation=0.05*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "icosidodecahedron" begin
    println("icosidodecahedron")
    F = Polytope([[30,24,29,7,8],[26,24,30],[25,29,24],[5,7,29],[14,8,7],[6,30,8],[16,2,6],[19,21,26],[20,18,25],[1,15,5],[22,23,14],[2,19,26,30,6],[21,20,25,24,26],[18,1,5,29,25],[15,22,14,7,5],[23,16,6,8,14],[12,13,4,17,3],[3,17,9],[17,4,10],[4,13,28],[13,12,11],[12,3,27],[27,1,18],[9,22,15],[10,16,23],[28,19,2],[11,20,21],[27,3,9,15,1],[9,17,10,23,22],[10,4,28,2,16],[28,13,11,21,19],[11,12,27,18,20]], Matrix([0 -1.618033988749895 0; 0 1.618033988749895 0; 0.2628655560595668 -0.8090169943749474 -1.376381920471174; 0.2628655560595668 0.8090169943749474 -1.376381920471174; 0.4253254041760200 -1.309016994374947 0.8506508083520399; 0.4253254041760200 1.309016994374947 0.8506508083520399; 0.6881909602355868 -0.5000000000000000 1.376381920471174; 0.6881909602355868 0.5000000000000000 1.376381920471174; 1.113516364411607 -0.8090169943749474 -0.8506508083520399; 1.113516364411607 0.8090169943749474 -0.8506508083520399; -1.376381920471174 0 -0.8506508083520399; -0.6881909602355868 -0.5000000000000000 -1.376381920471174; -0.6881909602355868 0.5000000000000000 -1.376381920471174; 1.376381920471174 0 0.8506508083520399; 0.9510565162951536 -1.309016994374947 0; 0.9510565162951536 1.309016994374947 0; 0.8506508083520399 0 -1.376381920471174; -0.9510565162951536 -1.309016994374947 0; -0.9510565162951536 1.309016994374947 0; -1.538841768587627 -0.5000000000000000 0; -1.538841768587627 0.5000000000000000 0; 1.538841768587627 -0.5000000000000000 0; 1.538841768587627 0.5000000000000000 0; -0.8506508083520399 0 1.376381920471174; -1.113516364411607 -0.8090169943749474 0.8506508083520399; -1.113516364411607 0.8090169943749474 0.8506508083520399; -0.4253254041760200 -1.309016994374947 -0.8506508083520399; -0.4253254041760200 1.309016994374947 -0.8506508083520399; -0.2628655560595668 -0.8090169943749474 1.376381920471174; -0.2628655560595668 0.8090169943749474 1.376381920471174]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.125*pi, elevation=0.125*pi, alpha=0.65)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end

@testset "tetrahedron" begin
    println("tetrahedron")
    F = Polytope([[1,2,3], [2,3,4], [1,2,4], [1,3,4]], Matrix([1/sqrt(3) 0 0; -sqrt(3)/6 1/2 0; -sqrt(3)/6 -1/2 0; 0 0 sqrt(6)/3]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "octahedron" begin
    println("octahedron")
    F = Polytope([[1,2,3],[1,2,5],[1,3,4],[1,4,5],[6,2,3],[6,2,5],[6,3,4],[6,4,5]], Matrix([2 0 sqrt(2); -1 sqrt(3) sqrt(2); -1 -sqrt(3) sqrt(2); 1 -sqrt(3) -sqrt(2); 1 sqrt(3) -sqrt(2); -2 0 -sqrt(2)]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, elevation=0.15*pi, azimuth=0.15*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "dodecahedron" begin
    println("dodecahedron")
    F = Polytope([[15,10,9,14,1],[2,6,12,11,5],[5,11,7,3,19],[11,12,8,16,7],[12,6,20,4,8],[6,2,13,18,20],[2,5,19,17,13],[4,20,18,10,15],[18,13,17,9,10],[17,19,3,14,9],[3,7,16,1,14],[16,8,4,15,1]], Matrix([-1.376381920471174 0 0.2628655560595668; 1.376381920471174 0 -0.2628655560595668; -0.4253254041760200 -1.309016994374947 0.2628655560595668; -0.4253254041760200 1.309016994374947 0.2628655560595668; 1.113516364411607 -0.8090169943749474 0.2628655560595668; 1.113516364411607 0.8090169943749474 0.2628655560595668; -0.2628655560595668 -0.8090169943749474 1.113516364411607; -0.2628655560595668 0.8090169943749474 1.113516364411607; -0.6881909602355868 -0.5000000000000000 -1.113516364411607; -0.6881909602355868 0.5000000000000000 -1.113516364411607; 0.6881909602355868 -0.5000000000000000 1.113516364411607; 0.6881909602355868 0.5000000000000000 1.113516364411607; 0.8506508083520399 0 -1.113516364411607; -1.113516364411607 -0.8090169943749474 -0.2628655560595668; -1.113516364411607 0.8090169943749474 -0.2628655560595668; -0.8506508083520399 0 1.113516364411607; 0.2628655560595668 -0.8090169943749474 -1.113516364411607; 0.2628655560595668 0.8090169943749474 -1.113516364411607; 0.4253254041760200 -1.309016994374947 -0.2628655560595668; 0.4253254041760200 1.309016994374947 -0.2628655560595668]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.05*pi, elevation=0.075*pi, alpha=0.65)
    
    @test !is_inf_rigid(F)
    @test is_second_order_rigid(F)
    @test is_rigid(F)
end


@testset "icosahedron" begin
    println("icosahedron")
    F = Polytope([[2,12,8],[2,8,7],[2,7,11],[2,11,4],[2,4,12],[5,9,1],[6,5,1],[10,6,1],[3,10,1],[9,3,1],[12,10,8],[8,3,7],[7,9,11],[11,5,4],[4,6,12],[5,11,9],[6,4,5],[10,12,6],[3,8,10],[9,7,3]], Matrix([0 0 -0.951056516295; 0 0 0.951056516295; -0.850650808352 0 -0.425325404176; 0.850650808352 0 0.425325404176; 0.688190960236 -0.500000000000 -0.425325404176; 0.688190960236 0.500000000000 -0.425325404176; -0.688190960236 -0.500000000000 0.425325404176; -0.688190960236 0.500000000000 0.425325404176; -0.262865556060 -0.809016994375 -0.425325404176; -0.262865556060 0.809016994375 -0.425325404176; 0.262865556060 -0.809016994375 0.425325404176; 0.262865556060 0.809016994375 0.425325404176]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.11*pi, elevation=0.1*pi, alpha=0.65)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "truncatedTetrahedron" begin
    println("truncatedTetrahedron")
    F = Polytope([(11,12,8),(3,9,1),(2,10,4),(6,5,7),(11,8,7,5,3,1),(2,4,6,7,8,12),(9,3,5,6,4,10),(2,12,11,1,9,10)], Matrix([0 -1.000000000000000 -0.6123724356957945; 0 1.000000000000000 -0.6123724356957945; -0.5773502691896258 -1.000000000000000 0.2041241452319315; -0.5773502691896258 1.000000000000000 0.2041241452319315; -0.2886751345948129 -0.5000000000000000 1.020620726159658; -0.2886751345948129 0.5000000000000000 1.020620726159658; 0.5773502691896258 0 1.020620726159658; 1.154700538379252 0 0.2041241452319315; -0.8660254037844386 -0.5000000000000000 -0.6123724356957945; -0.8660254037844386 0.5000000000000000 -0.6123724356957945; 0.8660254037844386 -0.5000000000000000 -0.6123724356957945; 0.8660254037844386 0.5000000000000000 -0.6123724356957945]'))    
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0.05*pi, elevation=0.16*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "truncatedOctahedron" begin
    println("truncatedOctahedron")
    F = Polytope([[17,11,9,15],[14,8,10,16],[22,24,21,18],[12,5,2,6],[13,19,23,20],[4,1,3,7],[19,13,7,3,8,14],[15,9,4,7,13,20],[16,10,5,12,18,21],[22,18,12,6,11,17],[20,23,24,22,17,15],[14,16,21,24,23,19],[9,11,6,2,1,4],[3,1,2,5,10,8]], Matrix([-1.5000000000000 -0.50000000000000 0; -1.5000000000000 0.50000000000000 0; -1.0000000000000 -1.0000000000000 -0.70710678118655; -1.0000000000000 -1.0000000000000 0.70710678118655; -1.0000000000000 1.0000000000000 -0.70710678118655; -1.0000000000000 1.0000000000000 0.70710678118655; -0.50000000000000 -1.5000000000000 0; -0.50000000000000 -0.50000000000000 -1.4142135623731; -0.50000000000000 -0.50000000000000 1.4142135623731; -0.50000000000000 0.50000000000000 -1.4142135623731; -0.50000000000000 0.50000000000000 1.4142135623731; -0.50000000000000 1.5000000000000 0; 0.50000000000000 -1.5000000000000 0; 0.50000000000000 -0.50000000000000 -1.4142135623731; 0.50000000000000 -0.50000000000000 1.4142135623731; 0.50000000000000 0.50000000000000 -1.4142135623731; 0.50000000000000 0.50000000000000 1.4142135623731; 0.50000000000000 1.5000000000000 0; 1.0000000000000 -1.0000000000000 -0.70710678118655; 1.0000000000000 -1.0000000000000 0.70710678118655; 1.0000000000000 1.0000000000000 -0.70710678118655; 1.000000000000 1.0000000000000 0.70710678118655; 1.5000000000000 -0.50000000000000 0; 1.5000000000000 0.50000000000000 0]'))    
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, azimuth=0., elevation=0.075*pi)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # zonotope
    if is_no_ci
        D = DeformationPath(F, [], 200; step_size=0.01, tol=1e-4)
        animate(D,F,"../animations/truncatedOctahedron_motion"; fixed_vertices=(1,3,7), filetype="mp4", renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end


@testset "truncatedCube" begin
    println("truncatedCube")
    F = Polytope([(6,12,10,8,4,18,20,2),(1,19,17,3,7,9,11,5),(3,24,23,4,8,15,16,7),(5,14,13,6,2,21,22,1),(9,16,15,10,12,13,14,11),(19,22,21,20,18,23,24,17),(16,9,7),(5,11,14),(3,17,24),(22,19,1),(8,10,15),(13,12,6),(23,18,4),(2,20,21)], Matrix([-0.5000000000000000 1.207106781186548 1.207106781186548; -0.5000000000000000 1.207106781186548 -1.207106781186548; -0.5000000000000000 -1.207106781186548 1.207106781186548; -0.5000000000000000 -1.207106781186548 -1.207106781186548; 0.5000000000000000 1.207106781186548 1.207106781186548; 0.5000000000000000 1.207106781186548 -1.207106781186548; 0.5000000000000000 -1.207106781186548 1.207106781186548; 0.5000000000000000 -1.207106781186548 -1.207106781186548; 1.207106781186548 -0.5000000000000000 1.207106781186548; 1.207106781186548 -0.5000000000000000 -1.207106781186548; 1.207106781186548 0.5000000000000000 1.207106781186548; 1.207106781186548 0.5000000000000000 -1.207106781186548; 1.207106781186548 1.207106781186548 -0.5000000000000000; 1.207106781186548 1.207106781186548 0.5000000000000000; 1.207106781186548 -1.207106781186548 -0.5000000000000000; 1.207106781186548 -1.207106781186548 0.5000000000000000; -1.207106781186548 -0.5000000000000000 1.207106781186548; -1.207106781186548 -0.5000000000000000 -1.207106781186548; -1.207106781186548 0.5000000000000000 1.207106781186548; -1.207106781186548 0.5000000000000000 -1.207106781186548; -1.207106781186548 1.207106781186548 -0.5000000000000000; -1.207106781186548 1.207106781186548 0.5000000000000000; -1.207106781186548 -1.207106781186548 -0.5000000000000000; -1.207106781186548 -1.207106781186548 0.5000000000000000]'))    
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, elevation=0.1*pi, azimuth=0.15*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end


@testset "snubCube" begin
    println("snubCube")
    F = Polytope([[3,1,17],[3,17,9],[3,19,2],[3,9,19],[1,4,20],[1,20,11],[1,11,17],[2,19,12],[2,18,4],[2,12,18],[4,18,10],[4,10,20],[17,11,13],[19,9,15],[18,12,14],[20,10,16],[9,21,15],[11,23,13],[12,24,14],[10,22,16],[13,23,7],[13,7,21],[15,21,5],[15,5,24],[16,22,6],[16,6,23],[14,24,8],[14,8,22],[21,7,5],[23,6,7],[24,5,8],[22,8,6],[1,3,2,4],[21,9,17,13],[24,12,19,15],[10,18,14,22],[11,20,16,23],[8,5,7,6]], Matrix([-1.142613508925962 -0.3377539738137524 -0.6212264105565853; -1.142613508925962 0.3377539738137524 0.6212264105565853; -1.142613508925962 -0.6212264105565853 0.3377539738137524; -1.142613508925962 0.6212264105565853 -0.3377539738137524; 1.142613508925962 -0.3377539738137524 0.6212264105565853; 1.142613508925962 0.3377539738137524 -0.6212264105565853; 1.142613508925962 -0.6212264105565853 -0.3377539738137524; 1.142613508925962 0.6212264105565853 0.3377539738137524; -0.3377539738137524 -1.142613508925962 0.6212264105565853; -0.3377539738137524 1.142613508925962 -0.6212264105565853; -0.3377539738137524 -0.6212264105565853 -1.142613508925962; -0.3377539738137524 0.6212264105565853 1.142613508925962; 0.3377539738137524 -1.142613508925962 -0.6212264105565853; 0.3377539738137524 1.142613508925962 0.6212264105565853; 0.3377539738137524 -0.6212264105565853 1.142613508925962; 0.3377539738137524 0.6212264105565853 -1.142613508925962; -0.6212264105565853 -1.142613508925962 -0.3377539738137524; -0.6212264105565853 1.142613508925962 0.3377539738137524; -0.6212264105565853 -0.3377539738137524 1.142613508925962; -0.6212264105565853 0.3377539738137524 -1.142613508925962; 0.6212264105565853 -1.142613508925962 0.3377539738137524; 0.6212264105565853 1.142613508925962 -0.3377539738137524; 0.6212264105565853 -0.3377539738137524 -1.142613508925962; 0.6212264105565853 0.3377539738137524 1.142613508925962]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01,alpha=0.65,elevation=0.03*pi, azimuth=0.125*pi)
    @test is_inf_rigid(F)
    @test is_rigid(F)
end



@testset "smallRhombiIcosidodecahedron" begin
    println("smallRhombiIcosidodecahedron")
    F = Polytope([[36,23,27],[37,28,24],[40,8,7],[35,5,6],[38,29,25],[39,26,30],[10,14,2],[9,1,13],[12,4,16],[11,15,3],[54,45,41],[55,42,46],[58,19,20],[53,18,17],[56,43,47],[57,48,44],[34,32,22],[33,21,31],[59,51,49],[60,50,52],[27,31,21,36],[23,36,1,9],[10,2,37,24],[37,22,32,28],[8,40,30,26],[25,29,40,7],[35,27,23,5],[6,24,28,35],[3,38,25,11],[21,33,29,38],[39,30,34,22],[12,26,39,4],[55,14,10,42],[41,9,13,54],[57,44,12,16],[15,11,43,56],[45,54,59,49],[50,60,55,46],[48,58,20,44],[43,19,58,47],[53,17,41,45],[46,42,18,53],[59,56,47,51],[52,48,57,60],[31,32,34,33],[17,18,6,5],[1,3,15,13],[14,16,4,2],[7,8,20,19],[51,52,50,49],[3,1,36,21,38],[22,37,2,4,39],[29,33,34,30,40],[27,35,28,32,31],[42,10,24,6,18],[41,17,5,23,9],[20,8,26,12,44],[11,25,7,19,43],[56,59,54,13,15],[57,16,14,55,60],[58,48,52,51,47],[49,50,46,53,45]], Matrix([-0.5000000000000000 -0.5000000000000000 -2.118033988749895; -0.5000000000000000 -0.5000000000000000 2.118033988749895; -0.5000000000000000 0.5000000000000000 -2.118033988749895; -0.5000000000000000 0.5000000000000000 2.118033988749895; -0.5000000000000000 -2.118033988749895 -0.5000000000000000; -0.5000000000000000 -2.118033988749895 0.5000000000000000; -0.5000000000000000 2.118033988749895 -0.5000000000000000; -0.5000000000000000 2.118033988749895 0.5000000000000000; 0 -1.309016994374947 -1.809016994374947; 0 -1.309016994374947 1.809016994374947; 0 1.309016994374947 -1.809016994374947; 0 1.309016994374947 1.809016994374947; 0.5000000000000000 -0.5000000000000000 -2.118033988749895; 0.5000000000000000 -0.5000000000000000 2.118033988749895; 0.5000000000000000 0.5000000000000000 -2.118033988749895; 0.5000000000000000 0.5000000000000000 2.118033988749895; 0.5000000000000000 -2.118033988749895 -0.5000000000000000; 0.5000000000000000 -2.118033988749895 0.5000000000000000; 0.5000000000000000 2.118033988749895 -0.5000000000000000; 0.5000000000000000 2.118033988749895 0.5000000000000000; -1.809016994374947 0 -1.309016994374947; -1.809016994374947 0 1.309016994374947; -0.8090169943749474 -1.618033988749895 -1.309016994374947; -0.8090169943749474 -1.618033988749895 1.309016994374947; -0.8090169943749474 1.618033988749895 -1.309016994374947; -0.8090169943749474 1.618033988749895 1.309016994374947; -1.618033988749895 -1.309016994374947 -0.8090169943749474; -1.618033988749895 -1.309016994374947 0.8090169943749474; -1.618033988749895 1.309016994374947 -0.8090169943749474; -1.618033988749895 1.309016994374947 0.8090169943749474; -2.118033988749895 -0.5000000000000000 -0.5000000000000000; -2.118033988749895 -0.5000000000000000 0.5000000000000000; -2.118033988749895 0.5000000000000000 -0.5000000000000000; -2.118033988749895 0.5000000000000000 0.5000000000000000; -1.309016994374947 -1.809016994374947 0; -1.309016994374947 -0.8090169943749474 -1.618033988749895; -1.309016994374947 -0.8090169943749474 1.618033988749895; -1.309016994374947 0.8090169943749474 -1.618033988749895; -1.309016994374947 0.8090169943749474 1.618033988749895; -1.309016994374947 1.809016994374947 0; 0.8090169943749474 -1.618033988749895 -1.309016994374947; 0.8090169943749474 -1.618033988749895 1.309016994374947; 0.8090169943749474 1.618033988749895 -1.309016994374947; 0.8090169943749474 1.618033988749895 1.309016994374947; 1.618033988749895 -1.309016994374947 -0.8090169943749474; 1.618033988749895 -1.309016994374947 0.8090169943749474; 1.618033988749895 1.309016994374947 -0.8090169943749474; 1.618033988749895 1.309016994374947 0.8090169943749474; 2.118033988749895 -0.5000000000000000 -0.5000000000000000; 2.118033988749895 -0.5000000000000000 0.5000000000000000; 2.118033988749895 0.5000000000000000 -0.5000000000000000; 2.118033988749895 0.5000000000000000 0.5000000000000000; 1.309016994374947 -1.809016994374947 0; 1.309016994374947 -0.8090169943749474 -1.618033988749895; 1.309016994374947 -0.8090169943749474 1.618033988749895; 1.309016994374947 0.8090169943749474 -1.618033988749895; 1.309016994374947 0.8090169943749474 1.618033988749895; 1.309016994374947 1.809016994374947 0; 1.809016994374947 0 -1.309016994374947; 1.809016994374947 0 1.309016994374947]'))
    plot(F; vertex_labels=false, vertex_size=16, vertex_color=:steelblue, padding=0.01, elevation=0.05*pi, azimuth=0., alpha=0.65)
    @test !is_inf_rigid(F)
    @test !is_rigid(F) # "generic" Minkowski sum of two simplices
    if is_no_ci
        D = DeformationPath(F, [], 250; step_size=0.0075, tol=1e-4)
        animate(D,F,"../animations/smallRhombiIcosidodecahedron_motion"; fixed_vertices=(7,8,40), filetype="mp4", elevation=0.05*pi, azimuth=0., renderEntirePolytope=true, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end


@testset "RhombicTriacontahedron" begin
    println("RhombicTriacontahedron")
    F = Polytope([[16,15,11,12],[14,13,17,18],[10,28,20,30],[8,5,6,25],[12,28,31,16],[32,30,14,18],[6,3,11,15],[8,17,13,4],[11,21,19,27],[13,29,19,22],[7,16,23,26],[24,18,9,26],[12,11,27,28],[30,29,13,14],[7,6,15,16],[18,17,8,9],[2,22,19,21],[23,1,24,26],[3,2,21,11],[4,13,22,2],[16,31,1,23],[1,32,18,24],[31,28,10,1],[10,30,32,1],[6,5,2,3],[8,4,2,5],[28,27,19,20],[20,19,29,30],[26,25,6,7],[9,8,25,26]], Matrix([0 0 -1.618033988749895; 0 0 1.618033988749895; 0.2763932022500210 -0.8506508083520399 1.170820393249937; 0.2763932022500210 0.8506508083520399 1.170820393249937; 0.8944271909999159 0 1.170820393249937; 1.170820393249937 -0.8506508083520399 0.7236067977499790; 1.170820393249937 -0.8506508083520399 -0.2763932022500210; 1.170820393249937 0.8506508083520399 0.7236067977499790; 1.170820393249937 0.8506508083520399 -0.2763932022500210; -0.8944271909999159 0 -1.170820393249937; -0.4472135954999579 -1.376381920471174 0.7236067977499790; -0.4472135954999579 -1.376381920471174 -0.2763932022500210; -0.4472135954999579 1.376381920471174 0.7236067977499790; -0.4472135954999579 1.376381920471174 -0.2763932022500210; 0.4472135954999579 -1.376381920471174 0.2763932022500210; 0.4472135954999579 -1.376381920471174 -0.7236067977499790; 0.4472135954999579 1.376381920471174 0.2763932022500210; 0.4472135954999579 1.376381920471174 -0.7236067977499790; -1.447213595499958 0 0.7236067977499790; -1.447213595499958 0 -0.2763932022500210; -0.7236067977499790 -0.5257311121191336 1.170820393249937; -0.7236067977499790 0.5257311121191336 1.170820393249937; 0.7236067977499790 -0.5257311121191336 -1.170820393249937; 0.7236067977499790 0.5257311121191336 -1.170820393249937; 1.447213595499958 0 0.2763932022500210; 1.447213595499958 0 -0.7236067977499790; -1.170820393249937 -0.8506508083520399 0.2763932022500210; -1.170820393249937 -0.8506508083520399 -0.7236067977499790; -1.170820393249937 0.8506508083520399 0.2763932022500210; -1.170820393249937 0.8506508083520399 -0.7236067977499790; -0.2763932022500210 -0.8506508083520399 -1.170820393249937; -0.2763932022500210 0.8506508083520399 -1.170820393249937]'))
    plot(F; vertex_labels=false, vertex_size=16,  vertex_color=:steelblue, padding=0.01, alpha=0.7, azimuth=0.075*pi, elevation=0.15*pi)
    @test !is_inf_rigid(F)
    @test !is_rigid(F)
    if is_no_ci
        D = DeformationPath(F, [], 225; step_size=0.0085, tol=1e-6)
        animate(D,F,"../animations/RhombicTriacontahedron_motion"; fixed_vertices=(11,12,15), filetype="mp4", renderEntirePolytope=true, azimuth=0.075*pi, elevation=0.15*pi, animate_rotation=false,  rotation_frames=800, padding=0.01)
    end
end
